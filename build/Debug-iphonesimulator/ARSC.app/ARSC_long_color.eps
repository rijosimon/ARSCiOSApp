%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 5.0%%AI8_CreatorVersion: 10.0%%For: (ARSC) (UAF)%%Title: (ARSC_long_color.eps)%%CreationDate: 12/23/03 3:37 PM%%BoundingBox: 15 11 565 95%%HiResBoundingBox: 15.0503 11.9414 564.6299 94.2939%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_blend_AI5 1.0 0%%+ procset Adobe_Illustrator_AI5 1.0 0%%+ procset Adobe_pattern_AI5 1.0 0%AI5_FileFormat 1.1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 288.5 53.5 288.5 53.5%AI3_TileBox: -71 -233 659 319%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 576 108%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI5_OpenToView: -11 259 1 716 500 18 0 1 123 68 0 0%AI5_OpenViewLayers: 77%%PageOrigin:-71 -233%%AI3_PaperRect:-31 582 761 -30%%AI3_Margin:31 -30 -31 30%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_blend_AI5 1.4 0%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)%%Version: 1.4 0%%CreationDate: (11/19/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_blend_AI5 70 dict dup beginput/bd{	bind def} bind def/xs{	exch store} bd/nullProc{	{	}} def/initialize{	pop pop	Adobe_blend_AI5 begin		Adobe_blend_AI5_vars begin			/_contoneDevice where			{				pop			}			{				/_contoneDevice false def				} ifelse								/_dpiThreshold where			{				pop			}			{					/_dpiThreshold 600 def			} ifelse						/_screenFreqThreshold where			{				pop			}			{					/_screenFreqThreshold 150 def			} ifelse						/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def	/invertXfer	{		[		{			1 exch sub				} /exec load systemdict/currenttransfer get exec /exec load				] cvx systemdict/settransfer get exec			} bd			/spotDict 3 dict dup begin				/nSpots 2 def				/spot1 7 dict def				/spot2 7 dict def		 end			def			composite?			{				/_setgray_ /setgray load def				/_fill_ /fill load def				/_image_ /image load def			}			{				/_setgray_ systemdict/setgray get def				/_fill_ systemdict/fill get def				/_image_ systemdict/image get def			} ifelse		} bd		/terminate		{			currentdict Adobe_blend_AI5_vars eq			{		 end			currentdict Adobe_blend_AI5 eq			{		 end		} if	} if} bd/_compositeSpotDevice where{ begin		_compositeSpotDevice 0 ne {userdict /composite? true put} if end}{	/_compositeSpotDevice 0 def	} ifelse	/nullString () def/d255 256 array def0 1 255{	d255 exch dup 255 div put} bind for/d255- 256 array def0 1 255{	d255- exch 1 d255 2 index get sub put} bind for/dUserSpace matrix defaultmatrix defcurrentdict /Adobe_blend_AI5_vars 89 dict dup beginput{	/f /F /s /S /b /B}{	null def} bind forall/byte 1 string def/sSave null def/setSSave{	save /sSave exch store} bind def/Bm null def/doBlend null def/startC? false def/endC? false def/fCMYK? null def/startTint 0 def/endTint 0 def/bSMatrix matrix def/bUMatrix matrix def/dMatrix matrix def/inLine? true def/pTState? false def/bHi? false def/yHi 0 def/xHi 0 def/noImg /lv1Fix where{	pop lv1Fix}{	false} ifelsedef/ccAry1 5 array def/ccTint 0 def/spotColor? false def/colorimage? true def[/tint1Data/tint2Data/spotDict/bAxis/ubAxis/pChange/optimize?/nSamples/sInc/blendProc/_bn/xBCInc/yBCInc/bInc/bRender/cBName/cBType/nColors/color?/blend?/colorType/cData/cDataLen/bDataLen/rampPoint/midPoint/endPoint/blendLength/blackData/yeData/mgData/cyData/cnt1/ndx/_fill/tmpcounttomark{	null def} bindrepeatpopcurrentdictendcurrentdictendexchbeginbegin/unitSq{	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath} bd/gMark{	counttomark 2 add -1 roll} bd/setCustomColor{	dup /ccTint exch store	1 exch sub 6 1 roll	ccAry1 astore	exch setcustomcolor} bd/currentCustomColor{	ccAry1 aload pop ccTint} bd/nsetcustomcolor where {	pop}{	/nsetcustomcolor	{		pop setcmykcolor		} bd} ifelse/nsetcustomcolorend where {	pop}{	/nsetcustomcolorend	{	} bd} ifelse/setBSpace{	newpath bUMatrix astore concat unitSq} bd/setCStop{	dup 0 eq	{		pop				spotColor?			{			dup 1 exch sub /ccTint exch def			ccAry1 4 /Black put			} if		setgray	}	{		1 eq		{			setcmykcolor		}		{			composite? not colorType 2 lt and			{				forceCMYK			}			{				setCustomColor			} ifelse		} ifelse	} ifelse} bd/makeByte{	/tmp 0 store	255 mul cvi	8 string 8	{		dup tmp 3 index put /tmp tmp 1 add store	} repeat	exch pop} bd/setImgSpace{	cDataLen 1 8	2 index 0 0 1 0 0 dMatrix astore} bd/bwImage{	setImgSpace cData /_image_ load	{		exec	} stopped	{		$error /errorname get /undefinedresult ne		{			stop		}		{			pop pop pop pop pop		} ifelse	} if} bdlevel2?{	/bFill	{		_fill	} def	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		expandCMYK		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd} if/expandOne{			dup type /stringtype ne			{				cDataLen string				exch				dup 0 ne				{					255 mul cvi					0 1 cDataLen 1 sub					{						3 copy						exch put pop					} for				} if				pop			} if} bd/expandSpot{	spotColor?	{		spotDict begin			spot1 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end			spot2 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end	 end	} if} bd/expandCMYK{	4	{		expandOne 4 1 roll	} repeat} bd/colorimage where dup{	exch pop		/ncolorimage where	{		pop	}	{		/ncolorimage {pop colorimage} bd	} ifelse} ifnot{	/ncolorimage where 	{		pop	}	{		/colorimage? false store		/ncolorimage		{			pop pop pop			setSSave		/blackData xs		/yeData xs		/mgData xs		/cyData xs		/cnt1 0 store		[		byte dup 0		cyData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx		}		{			.3 mul		} ifelse		mgData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx		}		{			.59 mul		} ifelse		yeData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx		}		{			.11 mul		} ifelse		blackData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx		} if		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/dup cvx 1 /gt cvx		{			pop 1		} /if cvx		255 /mul cvx /cvi cvx		256 /mod cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/put cvx		/cnt1 dup cvx 1 /add cvx /store cvx		] cvx		bind			_image_ 		sSave restore	} bd	} ifelse} iflevel2? not{	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		colorimage? 		{			expandCMYK		} if		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bwFill	{		setSSave		/cDataLen 8 store		/cData currentgray makeByte store		bwImage		sSave restore	} bd	/c1ImgFill	{		setSSave		/cDataLen 8 store		setImgSpace		spotColor?		{			spotDict begin				spot1 begin					currentCustomColor makeByte /tintImage exch def					/name exch def					/spot_K exch def					/spot_Y exch def					/spot_M exch def					/spot_C exch def			 end				spot2 initSpotData		 end		} if		currentcmykcolor		4		{			makeByte 4 1 roll		} repeat		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bFill	noImg	{		{			_fill		}	}	{		{			color?			{				c1ImgFill			}			{				bwFill			} ifelse		}	} ifelse	bd} ifcomposite?{	/bCFun	{		color?		{			cyData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			mgData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			yeData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			cData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			spotColor?			{				spotDict begin					/spotDict cvx /begin cvx					spot1 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx					spot2 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/spotDict cvx				/nsetcustomcolor cvx			}			{				/setcmykcolor cvx			} ifelse		}		{			cData /ndx cvx /get cvx			d255 /exch cvx /get cvx			/setgray cvx		} ifelse	} bd	/Bc	{		newpath		gsave		setBSpace		nColors 1 eq		{			pop pop			setCStop		} if		bFill		grestore	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			linImg		}		{			bFill		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/rdBm	{		/nColors dup load 1 sub store		_fill		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			_fill			blend? bHi? or			{				rdBlend			} if			nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/cGetRData	{		setCStop		/blend?		cData type /stringtype eq		dup not color? and		{			pop			cyData type /stringtype eq			mgData type /stringtype eq			yeData type /stringtype eq			or or		} if		store	} def	/cGetRData} if/eCStop{	mark	1 index 3 mul 3 add dup 8 gt	{		pop 8	} if	1 roll	cleartomark} bdcomposite? not{	/knockOut	level2?	{		{			0 0 0 0 setcmykcolor _fill		}	}	{		/bFill noImg		{			{				_fill			}		}		{			{				_of true eq				{					currentgray 1 ne					{						bwFill					} if				}				{					bwFill				} ifelse			}		} ifelse		def		/whiteByte 1 makeByte def		noImg		{			{				0 0 0 0 setcmykcolor _fill			}		}		{			{				cBType 0 eq				{					setSSave					/cData whiteByte store					/cDataLen 8 store					bwImage					sSave restore				}				{					_fill				} ifelse			}		} ifelse	} ifelse	bd	/bCFun	{		cData dup type /stringtype ne		{			color?			{				1 exch sub			} if		}		{			/ndx cvx /get cvx			color? customColor? not and			{				d255-			}			{				d255			} ifelse			/exch cvx /get cvx		} ifelse		/_setgray_ cvx	} bd	/eCCBlend	{		dup 3 eq		{			pop			mark 7 1 roll			6 copy ccThrough? dup /blend? xs			{				/startC? true store				setCustomColor				customColor?				{					/cData tint1Data store					setCDataLen				} if				/endC?				3 index 3 eq				{					4 index 1 ne				}				{					false				} ifelse				store			} if			cleartomark			stop		} if		1 eq		{			pop pop pop		} if		pop		/startC? false store		6		{			8 index		} repeat		ccThrough? dup /blend? xs		{			/endC? true store			blend? not			{				stop			} if			customColor?			{				/cData tint1Data store				setCDataLen			} if		} if	} bd	/handleOP	{		_of not		{			knockOut		} if	} bd	/handleROP	{		_of not		{			0 0 0 0 setcmykcolor _fill		}		{			newpath			} ifelse	} bd	/rdBm	{		/nColors dup load 1 sub store		blend? 		{			_fill		}		{			handleROP		} ifelse		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			blend?			{				cData type /stringtype ne bHi? not and				{					cData color?					{						1 exch sub					} if					_setgray_ 					_fill_ 				}				{					cData type /stringtype ne					{						/cDataLen 1 store						/bDataLen 1 store					} if					rdBlend				} ifelse			}			{								handleROP								pTState?				{					/bAxis rampPoint endPoint sub store					xHi bAxis mul yHi bAxis mul translate				} if			} ifelse							nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/ccThrough?	{		gsave		pop 0 setCustomColor		currentcmykcolor		grestore		anyColor?	} bd	/forceCMYK	{		exch pop		1 exch sub 5 1 roll		4		{			4 index mul 4 1 roll		} repeat		0		cCMYKData dup /cData ne		{			dup /yeData eq			{				pop 1 add			}			{				/mgData eq				{					2				}				{					3				} ifelse				add			} ifelse			0		} if		pop		index		0 eq		{			pop pop pop pop 0 0 0 0		} if		setcmykcolor		pop		/fCMYK? true store	} bd	/endCapSepBc	{		pop pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				colorType 1 eq				{					forceCMYK				}				{					fCMYK?					{						forceCMYK					}					{						setCustomColor					} ifelse				} ifelse			} ifelse		} ifelse		currentcmykcolor anyColor? 		blend? and		{			bFill		}		{			handleOP		} ifelse			} bd} if/cCMYKData 0 defcomposite? dup not{	pop customColor?} ifnot{	/cCMYKData	/cyData /mgData /yeData /cData	black? not	{		yellow?		{			exch		}		{			magenta?			{				3			}			{				4			} ifelse			-1 roll		} ifelse	} if	4 1 roll pop pop pop	store	/Bc	{		gsave		setBSpace		nColors 1 gt		{						blend? currentcmykcolor anyColor? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cCMYKData load dup type /stringtype eq			{				dup length /cDataLen xs				/cData xs				gsave				colorType 0 ne noImg not and				{					invertXfer				} if				linImg				grestore			}			{				pop bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/cmykGetRData	{		/fCMYK? false store		blend?		{			{				cmykDataProcs colorType get exec			} stopped			pop			blend?			{				/cData cCMYKData load store				setCDataLen			} if		} if	} def	/cmykDataProcs	[	{		pop		black? dup /blend? xs		{			setgray			0		} if		pop	}	{		cCMYKData load dup type /stringtype ne		{			0 0 0			cyan? not			{				4 magenta?				{					1				}				{					yellow?					{						2					}					{						3					} ifelse				} ifelse				roll			} if			4 copy add add add 0 eq			{				/blend? false store			} if						setcmykcolor			/startC? true store			/endC? true store			eCStop			stop		} if		pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				forceCMYK			} ifelse		} ifelse	} bind	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			black?			{				setgray			}			{				0 0 0 4 -1 roll 1 exch sub setcmykcolor			} ifelse			black?			{				/blend? true store			} if			6			{				8 index			} repeat			ccThrough?			{				/blend? true store			}			{				black?				{					/cData tint1Data store					setCDataLen				}				{					/blend? false store				} ifelse			} ifelse		}		{			mark 7 1 roll			6 copy ccThrough?			{				forceCMYK				pop				stop			} if			9 index 0 eq			{				black? dup /blend? xs				{					pop 1 setgray					/cData tint2Data store					setCDataLen					0				} if				pop			}			{				/blend?				6				{					16 index				} repeat				ccThrough?				store				blend?				{					forceCMYK				} if			} ifelse			cleartomark		} ifelse	} bind	] def	/cmykGetRData} ifcomposite? dup not{	pop isCMYKSep?} ifnot{	/endCapSepBc	{		/white? false store		pop pop		dup 0 eq		{			pop			/white? 1 index 1 eq store			setgray		}		{			1 eq			{				setcmykcolor			}			{				setCustomColor			} ifelse		} ifelse%		currentcmykcolor anyColor?		endC? or		blend? and		{			bFill		}		{			handleOP		} ifelse	} bd	/Bc	{		gsave		setBSpace		nColors 1 gt		{			blend? startC? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cData type /stringtype eq			{				linImg			}			{				bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/discardCMY	{		counttomark 4 add -3 roll pop pop pop	} bd	/testTopCC	{		6 copy ccThrough?	} bd	/getCRamp	{		{			ccDataProcs colorType 2 sub get exec		} stopped pop		blend? cDataLen 0 eq and		{			/cDataLen bDataLen store		} if	} bd	/ccGetRData	{		/fCMYK? false store		/startC? false store		/endC? false store		colorType 2 lt		{			/blend? false def		} if		blend?		{			getCRamp		}		{			setCStop		} ifelse		blend?		{			/blend? cData 1 ne store			blend?			{				cData dup type /stringtype ne				{					1 exch sub /cData xs 0				} if				pop			} if		} if	} def	/ccDataProcs	[	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			/blend? false store			pop		}		{			mark 7 1 roll			testTopCC			{				/blend? 1 index 1 ne store				/startC? blend? store				/endC? false store				blend? not				{					cleartomark stop				} if				/cData tint1Data store				setCDataLen				setCustomColor				pop				stop			} if			cleartomark		} ifelse		2 index 0 eq		{			/blend? false store		}		{			mark 6			{				9 index			} repeat			testTopCC dup /blend? xs			{				/blend? 1 index 1 ne store				/endC? blend? store				/startC? false store				blend? not				{					cleartomark stop				} if				/cData tint2Data store				setCDataLen			} if			cleartomark		} ifelse	} bind	] def	/ccGetRData} ifload Adobe_blend_AI5_vars /getData 3 -1 roll put/setCDataLen{	/cDataLen 0 cData dup type /stringtype eq	{		length exch	} if	pop store} bd/initSpotData{ begin		/name null def		/tintImage null def		/tintValue null def		/spot_C  null def		/spot_M  null def		/spot_Y  null def		/spot_K  null def end} bd/getRData{	/colorType gMark store	_compositeSpotDevice 0 ne	{		spotDict begin			spot1 initSpotData			spot2 initSpotData	 end		/spotColor? colorType 2 eq colorType 3 eq or def	} 	{		/spotColor? false store	} ifelse	/blend? true store	0 0 0 0 setcmykcolor	100 div /rampPoint xs% (between 13 and 87%) 	100 div /midPoint xs	dup 0 eq	{		2	}	{		dup 1 eq		{			5		}		{			_compositeSpotDevice 0 ne			{				spotDict begin					spot1 begin						/name 3 index def						/spot_K 4 index def						/spot_Y 5 index def						/spot_M 6 index def						/spot_C 7 index def				 end			 end			} if			7		} ifelse	} ifelse	/tmp exch def	tmp index 100 div /endPoint xs	_compositeSpotDevice 0 ne	{		tmp 2 add index 3 eq		{			/tmp tmp 4 add def			tmp index dup 			spotDict begin				spot1/name get ne				{					spot2 begin						/name exch def						/spot_K tmp 2 add index def						/spot_Y tmp 3 add index def						/spot_M tmp 4 add index def						/spot_C tmp 5 add index def				 end				}				{					pop				} ifelse		 end		} if	} if	/color? colorType 0 gt store		colorType 3 eq	{		/tint2Data gMark store	} if		colorType 2 ge	{		/tint1Data gMark store	} if	_compositeSpotDevice 0 ne	{		spotDict begin					colorType 2 ge			{				colorType 3 eq				{					spot2 begin						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def						name null eq {/name /Black def} if				 end				} if				spot1 begin					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def					colorType 2 eq 					{						name null eq 						{							/name spot2/name get def							spot2/name null put						} if					}					{						name null eq {/name /Black def} if					} ifelse			 end			} if	 end	} if		/cData gMark store	setCDataLen	colorType 0 gt	{		counttomark 4 add -3 roll		/yeData xs		/mgData xs		/cyData xs	} if	blend?	{		/bDataLen		cDataLen dup 0 eq color? and		{			[			cyData mgData yeData			]			{				dup type /stringtype eq				{					length exch pop exit				} if				pop			} forall		} if		store		bDataLen 0 eq		{			/bDataLen 1 store		} if		getData		blend?		{			composite? cDataLen 0 eq and			{				/cDataLen bDataLen store			} if		} if	}	{		setCStop	} ifelse} bd/Bg{	0 0 0 0 setcmykcolor	6	{		pop	} repeat	/blendLength xs	pop pop pop	/cBName xs	/bRender xs	bRender 2 ne	{		composite? not		{			_of setoverprint		} if		_eo {eoclip} {clip} ifelse		_bn cBName 2 copy known		{			get			mark exch aload pop			/cBType xs			/nColors xs			mark exch aload pop			0 0		} if		pop pop		getRData		cBType 0 eq		{			/linealBm		}		{			bHi?			{				/pTState? nColors 2 gt store			} if			/doBlend /rdBlend load store			/rdBm		} ifelse	}	{		inLine? not		{			mark mark		} if		/Bc dup		{			cleartomark mark		} bd		/nullProc	} ifelse	load /Bm xs} bd/linImgnoImg{	{		newpath doRctBlend	}}{	{		/doBlend		color? composite? and		{			/bCImg		}		{			/bwImage		} ifelse		load		store			0 0 moveto		tRectOK? composite? and		{			{				mark				0 1 dtransform atan cvi 90 mod 0 eq				1 0 dtransform atan cvi 90 mod 0 eq			} stopped			{				cleartomark			}			{				and exch pop				{					newpath					doRctBlend				}				{					doBlend				} ifelse			} ifelse		}		{			doBlend		} ifelse	} } ifelsebd/doRctBlend{	gsave	/sInc 1 store	/nSamples bDataLen store	/bInc 1 bDataLen div store	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store	/pChange ubAxis 0 eq	{		0	}	{		bDataLen ubAxis div	} ifelse	store	pChange .5 gt noImg not and dup /optimize? xs	{		/nSamples ubAxis 2 div round cvi dup 1 le		{			pop 2		} if		store		/bInc 1 nSamples div store		/sInc bDataLen 1 sub nSamples 1 sub div store	} if	0	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	/rectfill where dup	{		exch pop _compositeSpotDevice 1 ne and	} if	{		0 0 bInc 1 /rectfill cvx		}	{		0 0 /moveto cvx		bInc 0 /lineto cvx		bInc 1 /lineto cvx		0 1 /lineto cvx		/closepath cvx		/_fill_ cvx	} ifelse	bInc 0 /translate cvx	sInc /add cvx	] cvx	bind	repeat	pop	spotColor? {nsetcustomcolorend} if		grestore} bd/rdPrep{	/nSamples bDataLen dup 0 eq	{		pop 1	} if	store	/sInc -1 store	/bAxis rampPoint endPoint sub store	/bInc bAxis bDataLen div neg store	/optimize? false store	tRectOK?	{		/ubAxis		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		2 copy lt		{			exch		} if		pop store		/pChange ubAxis 0 eq		{			0		}		{			bDataLen ubAxis div		} ifelse		store		pChange .5 gt noImg not and dup /optimize? xs		{			/nSamples ubAxis 2 div round cvi dup 1 le			{				pop 2			} if			store			/bInc bAxis nSamples div neg store			/sInc bDataLen 1 sub nSamples 1 sub div neg store		} if	} if	bHi?	{		/xBCInc xHi bAxis mul nSamples div store		/yBCInc yHi bAxis mul nSamples div store	} if} bd/rdBlend{	newpath	gsave	rdPrep	rampPoint	bDataLen 1 sub	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx	/exch cvx bInc /add cvx /exch cvx	sInc /add cvx	bHi?	{		xBCInc yBCInc /translate cvx	} if	] cvx	bind	repeat	pop pop	spotColor? {nsetcustomcolorend} if	grestore	pTState?	{		xHi bAxis mul yHi bAxis mul translate	} if} bd/Bh{	pop pop	/pTState? false store	2 copy 0 ne exch 0 ne or dup /bHi? xs	{		/yHi xs		/xHi xs		0 0	} if	pop pop} bd/BD{	inLine? not	{		] nColors cBType		] _bn cBName 3 -1 roll put end} if} bd/Bn{1 add dictdup nullString null put/_bn xs} bd/Bd{Adobe_blend_AI5_vars begin	3 -1 roll dup nullString eq dup	{		setSSave	} if	/inLine? exch def	/cBName exch def	/nColors exch def	/cBType exch def} bd/Bb{	sSave null eq	{		Adobe_blend_AI5_vars begin		setSSave	} if	composite?	{		/_fill /fill load store	}	{		/__fill /fill load store			/_fill			{				_of true eq				{					currentgray 1 ne					{						__fill					} if				}				{					__fill				} ifelse			} def	} ifelse	/fill	{	} def	} bd	/BB	{	/cBType xs	cleartomark cleartomark	cBType dup	bRender	sSave dup type /savetype eq	{		restore 0	} if	pop	currentdict Adobe_blend_AI5_vars eq	{	 end	} if	2 ne exch 0 gt and	{		2 eq		{			s		}		{			S		} ifelse	}	{		pop newpath	} ifelse} bdcurrentdict readonly popendenddefaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%EndProlog%%BeginSetupAdobe_level2_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp13 Bn%AI5_BeginGradient: (Black, White Radial)(Black, White Radial) 1 2 Bd[<0000010102020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0E0E0F0F101010111112121313131414151516161617171818181918181817171716161615151515141414131312121211111010100F0F0E0E0D0D0C0C0B0B0A0A090908080707070606060606060505050505040404040404040505050505050505050505050505050505050606060606060606060606060606060707070707070707070707070707070707070708080808080808080808080808080808080808080808080808080808080808080808080807070707070706060606060606090B0E1013151718191A1B1C1D1E1F20212122232425262728><00000101020203030304040505060606070708080909090A0A0B0B0B0C0C0D0D0E0E0F0F101011111212121313141415151616171718181819191A1A19191918181717171616151515141413131212111110100F0F0E0E0D0D0C0B0B0A0A09080807060605050404030303030202020201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060B0F14181D2022242627292B2D2F3032343638393B3D3F41><0001020303040506060708090A0A0B0C0D0E0F10111112131415161718191919191A1A1A1B1B1B1B1C1C1C1C1D1D1D1E1E1E1E1F1F1F1F20202021212020201F1F1F1F1E1E1E1E1D1D1D1C1C1B1B1A1A19181817171616151514131211100F0E0D0C0B0A090807060606050505040404030303020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303040404040404040404040404040505050506060606070707070808080D12161B1F2326282A2C2D2F3132343638393B3D3F40424445><0001020303040506070809090A0B0C0D0E0F0F10111213141516161718191A1B1C1D1D1E1F20212223242525262728292A2B2C2D2D2E2F30313233343536373738393A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515253545455565758595A5B5C5D5E5F6060616263646565666768696A6B6C6C6D6E6F70717273747575767778797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A8A9AAABACADAEAFB0B1B2B3B5B6B7B8B9BABBBCBEBFC0C1C2C3C5C6C8C9CBCCCECFD1D2D3D5D6D8D9DADCDEDFE1E2E4E5E5E6E7E7E8E9E9EAEAEBECECEDEDEEEFEFF0><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807>4 %_Br[0 0 0 0 1 50 0 %_Bs0.1569 0.2549 0.2706 0.9412 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Copper)(Copper) 0 7 Bd[<000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202030304040505060707080809090A0A0B0B0C0C0C0C0C0C0C0C0C0D0C0C0D0D0C0D0C0C0B0C0B0B0C0B0B0B0A0A0A0A0A090A09090A090808080807080807080808060707070807><5B5B59585857575757555554525252514F51514F4F4E4C4C4C4B4A494B49494947474646444446444443424141413F3F3F3F3F3F3D3D3D3D3B3B3B393B3B3939393937373735353836363636353535333333333333333131312F2F2F2D2F2E2E2C2C2C2A2A2A282A2929272726252424222223232121211F1E1E1C1C1B1D1C1B1B1919><706F6E6D6D6C6A6A69686766656464636160605F5E5E5D5C5C5B5A5A59575757565555555353525151504F4F4F4E4D4D4D4B4B4B4A4A4949484848474646454646464545454444444343434342424242414140403F3F3E3E3E3D3D3C3C3B3B3A3A39393838383736353535343433333232323030302F2F2E2E2E2D2D2D2B2B2B2A2A2A><595859585757575655565555555554535453525252515251505050504E4F4E4D4E4D4D4C4C4C4B4B4A4A4A4A49484948474746464645454444434343424141403F3E3E3D3C3D3C3A3A39383838373636353434333231323130302F2E2E2D2C2B2B2B2A2A2928282726252524232423222221201F1F1E1D1D1C1B1B1A19181817161615><898A8A8B8C8D8D8E8F8F90919192939494959696979898999A9B9B9C9D9D9E9F9FA0A1A2A2A3A4A4A5A6A6A7A8A9A9AAABABACADADAEAFB0B0B1B2B2B3B4B4B5B6B7B7B8B9B9BABBBBBCBDBEBEBFC0C0C1C2C2C3C4C5C5C6C7C7C8C9C9CACBCCCCCDCECECFD0D0D1D2D3D3D4D5D5D6D7D7D8D9DADADBDCDCDDDEDEDFE0E1E1E2E3E3E4><6768696A6B6C6C6D6E6F70717273747576767778797A7B7C7D7E7F8080818283848586878889898A8B8C8D8E8F90919293939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFB0B1B1B2B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACBCCCDCECECFD0D1D2D3D4D5D6D7D8D8D9DADBDCDD><505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2>4 %_Br0<6E6E6E6E6E6E6E6E6E6E6E6B6D6D6D6D6D6D6A6C6C6C696B6B6B686A6A6869676769666866686567656764646463636363626262615F5E5E605F5F5D5C5C5B5B><7C7C7C7C7C7C7C7C7C7C7C7C7E7B7B7B7B7B7B7C79797A7B7B78797A7A7779797678787777797677757674767475757574767373757374747274737170727170><6B6B6B6B6B6B6B6B6B6B6B6C6A6A6A6A6A6A6B6969696A686868696868686767676667656665656464636463636261616160605F5F5F5E5E5C5C5B5C5B5A5A59><6F6F6F6F6F6F6F6F6F6F6F6F707070707070707171717172727272737373747474757576767777787879797A7A7B7C7C7D7E7E7F808081828384858586878889><4B4B4B4B4B4B4B4B4B4B4B4C4C4C4C4C4C4C4D4D4D4D4E4E4E4E4F4F4F505051515152525353545455555657575859595A5B5B5C5D5E5F606061626364656667><3A3A3A3A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3C3C3C3C3C3D3D3D3D3E3E3E3F3F3F40404041414242434344444545464647484849494A4B4B4C4D4E4E4F50>4 %_Br0<5B5B5C5C5D5D5D5E5E5F5F6060616566666767686869696A6B6C6D6E><70717270717273747473737475757475767677757778797A7B797B7C><595A5A5B5C5C5D5E5E5F606161626162626364656566676868696A6B><898887868584838281807F7E7D7C7C7B7A797877767574737271706F><67666564636261605F5E5D5C5B5A5857565554535251504F4E4D4C4B><504F4E4E4D4C4B4A494948474645454443424141403F3E3D3C3C3B3A>4 %_Br0<00000304010404050808080B09090C0C0D0F0F0F0F0F10101212131313141616171919171A1A1A1C1D1D1D1D1D1F1F1F212220222222242425262525272727292928282A2A2A2C2C2D2C2D2D2F2F2F312F303132323434343434353636373838363838373939393939383A3A3A3C3C3A3A3C3C3C3D3D3C3D3D3E3F3F404140404142424344444444444646474847474949494B4B4C4C4C4C4E4E4F4F4F4F505152525454535555555757585A58595B5B><00010304050708090B0C0C0E101113131315151517171717191A1A1C1D1E1F1F1F20202122222222232324242425252626262728282929292A2A2B2C2C2D2D2E2E2F303031313132323434343535353637383838393A3A3B3C3C3C3D3D3E3E3F3F40403F40404041414142424243434343444444454545464747484848494A4A4B4B4C4D4D4E4F4F505151525354545555565757585A5A5A5C5C5C5D5F5F5F6161626464666768686A6A6B6C6D6E6F70><000101010302030404050505060707080808090A0A0A0B0C0C0C0D0D0E0F0E0F1010111212131414141516171818191A1A1B1B1C1C1D1D1E1F1F202121222322232526252627272829292A2B2B2C2C2C2E2E2E2F30303132323334333435353637373839393A3B3B3C3D3C3D3E3E3F404141424343444544454645464746484948494A494A4A4A4B4C4B4C4D4C4D4E4D4E4F4E4F50505051505152525253545354555455565556575657575758595859><FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F4F4F3F2F2F1F0EFEFEEEDEDECEBEBEAE9E9E8E7E7E6E5E5E4E3E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D7D6D5D5D4D3D2D2D1D0D0CFCECECDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989796969594949392929190908F8E8E8D8C8C8B8A8A89><FFFEFDFCFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEEEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E1E0DFDEDDDCDBDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C1C0C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B3B2B1B0AFAEADACACABAAA9A8A7A6A6A5A4A3A2A1A09F9F9E9D9C9B9A9999989796959493929291908F8E8D8C8B8B8A89888786858584838281807F7E7E7D7C7B7A7978787776757473727171706F6E6D6C6B6A6A696867><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150>4 %_Br<0A090A0909090909080909080808080807080708070607060707060606070605060607060506060606050606060606060505050605040504050404040405040404040404030303030202020202010101000000><2C2B2A2B2A2A292A29282727272725252725242322242222202021201F1D1F1F1D1D1B1D1D1B1B1B1B1B19191919161618161513121412120F12120F0F0D0F0F0C0C0A0C0C0909090808050504040401030000><3F3F3E3D3D3C3C3B3A3A39393837373736353534343332323131302F2F2F2E2D2D2C2C2B2B2A2A2928272726252524242323222221201F1F1D1C1C1B1B191919171715151412110F0E0D0B0A08070604030100><2A292A2828272626252625242423232221212021201E1E1E1D1C1C1B1B1A19181817171615151414131212111110100F0E0E0D0E0D0C0C0B0C0B0A0A090A090808080807060605050504040303020102010100><CECFCFD0D0D1D2D2D3D3D4D5D5D6D6D7D8D8D9D9DADBDBDCDCDDDEDEDFDFE0E1E1E2E2E3E4E4E5E5E6E7E7E8E8E9E9EAEBEBECECEDEEEEEFEFF0F1F1F2F2F3F4F4F5F5F6F7F7F8F8F9FAFAFBFBFCFDFDFEFEFF><BFC0C1C1C2C3C4C4C5C6C7C8C8C9CACBCBCCCDCECFCFD0D1D2D3D3D4D5D6D6D7D8D9DADADBDCDDDDDEDFE0E1E1E2E3E4E4E5E6E7E8E8E9EAEBEBECEDEEEFEFF0F1F2F3F3F4F5F6F6F7F8F9FAFAFBFCFDFDFEFF><ACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br<00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010202020303030404040405060607070808080808090909090909090909090809090909090A0A090A0A><71716E6E6D6B6D6B6A6A68676765646261636160605E5E5C5C5C5A5A5B5959595756555454525454525250504F4E4D4D4B4D4B4B4B494948474646444644444442424240403F3F403F3F3F3D3D3C3C3C3A3A3C3B3A3A383836363634363634343231312F2F2F2E2F2E2E2D2C2C><9796949392908F8D8C8B89888785848281807E7D7D7B7A7978777675747271716F6E6D6C6C6A6969676765656463636261605F5E5E5D5B5B595959585756555554545453535252515050504F4E4D4E4E4D4D4C4C4B4B4A4A494949484747464545444443434342414140403F3F><5352525251515051504F504F4E4F4E4F4E4D4D4D4C4D4C4D4C4B4C4B4A4A4A494A494A494849484747474747464746454645454444444443434342434142414041403F403F3F3E3D3D3C3B3C3B3B3A393A39373837363635353433343231313131302F2F2E2D2E2C2D2C2B2B2A><8A8B8B8C8D8D8E8E8F909091929293939495959697979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A4A5A6A6A7A8A8A9A9AAABABACADADAEAFAFB0B0B1B2B2B3B4B4B5B5B6B7B7B8B9B9BABABBBCBCBDBEBEBFC0C0C1C1C2C3C3C4C5C5C6C6C7C8C8C9CACACBCBCCCDCDCE><5D5E5F60616262636465666768696A6B6C6C6D6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878889898A8B8C8D8E8F90919293939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFB0B0B1B2B3B4B5B6B7B8B9BABABBBCBDBEBF><3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0.0275 0.098 0.1647 0.0824 1 50 100 %_Bs0 0.3569 0.4392 0.349 1 50 85 %_Bs0 0.4314 0.4863 0.4196 1 73.9136 75 %_Bs0 0.3569 0.4392 0.349 1 50 63 %_Bs0 0 0 0 1 50 34 %_Bs0.0392 0.1725 0.2471 0.1647 1 50 14 %_Bs0 0.4431 0.5922 0.3255 1 50 2 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<ADABAAAAA8A6A4A4A29F9D9D9B999898959391918E8C8A8987858382807D7B7A78757474726F6D6B6B69666562605E5E5C5B595857555353514F4D4C4A484645444240413F3E3C3B3938363533312F2E2C2A28272523211F1D1B191715131412100E0D0C0B0A0908070605040302020101010101010100000100000000000000000000000000><9D9E9EA3A4A5A6AAABABACB0B1B2B3B6B7B7B8BBBBBBBCBFC0C0C1C3C4C4C4C7C7C7C8CBCBCBCBCDCECFCFD1D1D1D1D4D4D4D4D6D6D6D7D8D8D8D8D9D9D9D9DBDBDBDBDCDCDCDBDCDCDBDBDCDCDBDBDCDCDCDBDCDCDCDCDCDCDCDCDBDBDBDBDADADADADADADADADADADADADADADADADBDBDBDCDCDDDDDDDEDEDEDEDEDDDDDCDCDBDADAD9D9D8><0809090B0B0C0D0E0E0E0F10111111101111110F1010100F0F0F100E0E0D0D0B0C0C0B09090A0A080707070606060606060707080809090A090A0B0B0C0C0D0D0E0F0F0B0B0B0B0A0A0A0A090808080606060604040505050506070708090708090A0C0E0F1113141617191B1C1E1F202122232324252627252627292A2C2D2E303132343536><464646434342423F3F3F3F3C3C3C38343433332F2F2F2E2A2A2A29262727282525252521212223211E1F201E1F1F1F1D1D1D1E1C1C1C1D1B1B1B1C1A1A1B1B19191A1A15151515141415151415161818191A1B1B1B1C1C1C1D1E1E1F20211F2021201F1E1D1D1C1B1A19181716151412100F0D0B0A0806050301000000000000000000000000><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8><313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282827272727262626262525252524242424232323232222222221212121202020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A191919191818181817171717161616161515151514141414131313131212121211111111101010><666666666666666666666666666667676767676767676767676767676767676767676767676767676868686868686868686868686868686868686868686868686868686969696969696969696969696969696969696969696969696969696A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6B6B6B6B6B6B6B6B6B6B6B6B6B6B>4 %_Br<B3B4B4B4B4B5B5B5B5B5B5B6B6B7B7B8B8B8B8B8B8B8B8B7B7B7B8B8B8B9B9B9BABABABABABABBBBBBBCBDBDBEBEBFBFBFBFBFBFBFBFC0C0C1C0C0BFBFBEBEBDBDBEBEBDBDBCBEBDBDBCBCBCBBBABABABAB9B9B9BAB9B8B7B7B7B6B6B5B5B5B4B3B3B4B3B3B2B4B3B2B2B1B0AFAEAEAD><0608080808080808080808090A0B0E0E0F10111213141515161718191A1B1C1D1D1E1F202121222324252728292A2B2C2D2E3031323435363A3B3D3F41434445464648494B4D4F5152545557585A5C5E60626467686A6B6D6F71737577797A7C7E808486888A8B8D8F91939597999B9D><212121201F1F1E1E1D1D1C1C1C1B1A19191918171615141312111111101010100F0D0C0B09080605050405050505050404040404040404040404040404040403030303030303030302020202020202020203030302020202020201010202020202020303040404050506060606070708><01010203050607090A0C0D0E0E0F0E0F0F1012131517181A1C1D1E1E1F202021222324252628292A2B2B292A2A2B2C2C2D2D2E2E2F303031303132333435363737383839393A38393A3A3B3C3C3D3D3D3E3E3E3F3F404040414142424243434444444343434344444444454545464646><39393939393939393939383838383838383838383838383838383838373737373737373737373737373737373737373636363636363636363636363636363636363535353535353535353535353535353535353534343434343434343434343434343434343433333333333333333333><A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231><D1D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473737271706F6E6D6C6B6A69686766>4 %_Br<BEBDBEBEBEBEBDBDBDBDBDBDBDBEBEBEBEBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBBBBBBBAB9B9B9B8B8B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B4B4B4B3B3B3B3B2B2B2B2B3B3B3B3B3B3B3B3B3B3B4B4B3><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000203050606><B1B0AFADACAAA9A8A6A5A4A2A1A09E9D9B9A9997969493918F8E8C8B8A898786848381807E7D7B7A797776757472716F6E6C6B6A6867656362605F5E5C5C5B59585655545251504F4F4E4D4C4A4947464443424241403E3D3C3B3938363535343231302F2E2D2B2A29292826252321><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010202030303030303030303030404050506060605050606060606060707080707070707070707070707060403020101><4C4C4C4B4B4B4B4B4B4A4A4A4A4A4A494949494949484848484848474747474746464646464645454545454544444444444443434343434342424242424141414141414040404040403F3F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3D3C3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A393939><979797979797989898989898989898989899999999999999999999999A9A9A9A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B9B9B9B9C9C9C9C9C9C9C9C9C9C9C9D9D9D9D9D9D9D9D9D9D9D9E9E9E9E9E9E9E9E9E9E9E9F9F9F9F9F9F9F9F9F9F9FA0A0A0A0A0A0A0A0A0A0A0A1A1A1A1A1A1><62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394959697989A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1>4 %_Br<070809090A0A0B0B0C0C0D0D0E0E0F1010111212131414151618181A1A1C1D1E1F1F212122232425262728292A2A2C2D2E2F3031323334353638393A3B3D3E4041424345454748494A4C4D4E4F515254545657595A5C5D5E60616263656667696A6B6C6D6F70727374757778797A7C7D7E7F818283858687898A8B8D8E8F91929394959798999A9C9D9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B6B7B8B9BABABBBCBCBDBDBEBE><0C0C0B0A0A09080807070707060606060606060606060605050504040403030202020202020202020202010201020101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><C1C0C3C5C8CBCDD0D1D1D1D2D2D3D3D2D2D3D3D3D2D3D3D3D3D3D2D2D2D2D2D2D1D1D1D1D1D0D0D0D0D1D1D0D0D0D0D0D0CFCFCFCFCFCDCECDCDCDCDCDCDCDCDCDCCCBCACAC9C9C7C8C7C7C7C7C5C6C5C5C4C4C3C3C2C2C2C0C1C0C0BFC0BEBFBEBEBDBEBCBCBCBCBCBBBBBBBBBBBBBBBABBBABABAB9B9B9B9B9B8B8B9B8B9B9B8B8B8B8B8B8B7B7B7B7B7B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B4B4B4B4B4B4B3B3B2B2B2B2B1B1B1><020202020202020203030404040405050505060607060706060607060707070707080708070807070707060706060606050605060505050505040503040203010202020202020302020202020201010102010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999998989797><44444445454545454546464646464647474747474848484848484949494949494A4A4A4A4A4B4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4E4E4E4E4E4E4F4F4F4F4F4F50505050505151515151515252525252525353535353545454545454555555555555565656565657575757575758585858585859595959595A5A5A5A5A5A5B5B5B5B5B5B5C5C5C5C5C5D5D5D5D5D5D5E5E5E5E5E5E5F5F5F5F5F606060606060616161616161626262>4 %_Br<000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102030304050506060606070607><CDCCCBCAC9C8C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8C8B8A8988878584838281807F7E7D7B7B79777775737371706F6E6D6B6B6968686664646261615F5E5D5C5A5A5957575654545250504E4C4C4A484846444242403F3F3D3C3C3A3838363535333131302E2E2C2A2B282627242222201D1D1A171414110F0F0E0D0D0C0B0A0A0A0B0B0B0C0C><ADADAEAEAFAFAEAFAFB0B0B0B1B2B2B3B2B2B3B4B4B4B5B5B5B6B7B5B5B6B6B7B8B7B8B9B9B8B9B9BABABABBBCBBBCBCBBBBBCBCBCBDBEBDBEBFBDBEBEBEBEBFBEBFC0BFC0C0BFC0C1C1C1C2C1C2C2C0C1C1C1C1C2C1C1C2C1C2C1C2C1C2C3C2C3C4C3C4C4C2C3C4C4C5C6C6C7C8C8C8CAC9CBCCCBCCCDCCCDCECBCCCDCBCCCDCECCCDCECBCCCDCBCCCCCACBCCCACBCAC9CBCDCCCECECECECECDCDCDCCCDCECED0D1D3D3D4D4D5D4D4D4D4D4D4D1CECCC9C6C4C1><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101020202020102020101010101010000010000010101010101020202020202030302030404040505060606070807070807070807080908090A090A0B0A0A0B0C0B0B0B0A08070605040303030302020202><BCBCBDBDBDBEBEBEBFBFBFC0C0C0C1C1C1C2C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACACBCBCBCCCCCCCDCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6><363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><3333333333333434343434343434343435353535353535353535353636363636363636363637373737373737373737373838383838383838383839393939393939393939393A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F404040404040404040404041414141414141414141424242424242424242424243434343434343434343444444444444>4 %_Br[0 0.8471 0.2118 0 1 50 100 %_Bs0.6784 0.6157 0.0314 0.2745 1 50 80 %_Bs0.702 0.0235 0.1294 0.0039 1 50 60 %_Bs0.7451 0 0.6941 0 1 50 40 %_Bs0.0275 0.0471 0.7569 0.0078 1 50 20 %_Bs0 0.8039 0.6784 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Tropical Sunset)(Tropical Sunset) 0 5 Bd[0<A4A2A2A19F9F9D9C9C9B9A999797969594939392918F8F8D8C8B8A8988878786858482828080807E7D7C7B797979777675757472727171706F6D6D6D6B6A6A6967666766646464636161615F605E5D5E5C5C5B5A5A5958585757555455545452525150504E4E4E4E4C4C4A4A4A4A484848474847474545454445444444424242404242404040403E3E3E3E3E3E3E3E3E3C3C3C3C3C3C><A8A9A9A8A9A9AAABA9AAAAABACAAABACABACABAAABACACABACACADADACADADADADACADACACACACABACABABACACAAABABABABAAABABABABABACABABAAABACACAAABABAAABACABABABACACACADACADAEADAEAEAFAEADAEAFAFAEAEAFB0ADAEAEAFAFAEAFAFAEAEAEAEAFAFB0B0AFAFAEAEAEAFADAEAEAFAFAFB0ADAEAEAEAFAFAFAFADADAEAEAEAEAEAEAEAEADADADADADADADADADADAD><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010000000000000000000101010102010101010001010100000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010102020202020202020202030303030303030303030303030303><C9C9CACACACBCBCBCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDBDCDCDCDCDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E0E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEB><636465666768696A6B6C6D6E6F70717273747475767778797A7B7C7D7E7F7F80818283848585868788898A8B8B8C8D8E8F8F909192939394959696979899999A9B9C9C9D9E9E9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABABACADADAEAEAFAFB0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B7B8B8B9B9BABABABBBBBCBCBCBDBDBDBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C1C2C2C2C2C2C2><444444454545454546464646464747474747484848484849494949494A4A4A4A4A4B4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4E4E4E4E4E4E4E4F4F4F4F4F4F505050505050515151515151515252525252525252535353535353535354545454545454545555555555555555555556565656565656565656565757575757575757575757575757585858585858585858585858585858>4 %_Br<070607060606060505040303020101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><0C0C0B0B0B0A0B0B0B0C0D0D0E0F10111415181A1B1E20202325252729292B2D2D2E3030313333353737393A3A3C3E3E40414143454647494A4B4D4D4F51515355555758585A5A5C5D5E5F60616264646668696A6C6C6E6F70717273747677787A7B7C7E7F8081828384858788898A8C8C8E8F909192939495969798999A9B9C9D9E9FA0A2A2A4><C1C4C6C9CCCED0D3D3D4D4D3D4D4D4D3D2D1D0CECECCCBCCCBCBCCCBCBCCCBCACBCAC8C8C7C6C8C7C7C8C8C7C9C8C7C9C8C7C9C8C7C8C7C6C8C7C6C6C6C5C5C4C4C4C3C2C2C1C1C0BFBFBEBDBDBCBBBCBBBBBBBBBABABAB9B9B9B8B9B8B7B8B8B7B8B7B7B7B7B6B7B6B6B6B5B5B5B4B3B3B3B2B2B1B0B1B0AFB0AFAEAEADACACACABABAAA9A9A8><02020202030303030405060708090B0B0A0B0B0A0B0B0A0B0A0909090808070708070708070707060506050404040303020203020202020202010102010102010101010101010202020202020303020202010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000><F6F6F5F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0DFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECECDCDCDCCCCCCCBCBCBCACACAC9C9><E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463>0.26674 %_Br<110F0C0A070606040402020202020202020202010101010201020202020202020202010202020201010101010001010000000000000000000000000000000000000000000000000000000000000000010001010102010302020302030303040304030304040505050605060607080708070708070706070807080707><59565754545251514F504E4C4D4C4D4B4B4B4A4B49494947484746464445434343414240403F3E3F3D3D3C3A3B3939383838363535353432323131302E2E2D2D2A2A292928262525252422222121211F201E1D1D1B1C1B1A1A181917161614151312120F110F0F0E0C0D0B0B0B0A0A090A0A090A0A0B0B0B0B0B0C0C><02030507090C101316191D20222427292A2D2F31333437383A3C3D4042434547494B4C4E4F52535557585A5C5D5F6062646668696B6D6F71727476787A7B7F8082848588898B8D8E9092949697999B9C9EA0A2A3A5A6A8AAABADAEB0B1B2B4B5B7B8B9BBBCBDBFC0C1C2C3C4C5C6C8C8C9C8C6C8C6C7C5C3C5C3C3C1><1116171B1C1D1F1F2020212320211F20211F201E1F201F1F1E1F1F1E1F1E1E1E1D1E1D1D1E1C1D1C1D1D1C1E1C1D1D1C1C1B1C1C1B1B1A1B1B1A1A191A1A19191A191918181918181717171616151515141413131211111010100F0F0F0E0E0E0D0D0D0D0B0B090A0909080706060505050404040403030202020202><C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDEDFDFE0E0E0E1E1E2E2E2E3E3E4E4E4E5E5E6E6E6E7E7E8E8E8E9E9EAEAEAEBEBECECECEDEDEEEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F6F6><A0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADAEAEAFAFB0B1B1B2B2B3B4B4B5B5B6B7B7B8B8B9BABABBBBBCBCBDBEBEBFBFC0C1C1C2C2C3C4C4C5C5C6C7C7C8C8C9CACACBCBCCCDCDCECECFCFD0D1D1D2D2D3D4D4D5D5D6D7D7D8D8D9DADADBDBDCDDDDDEDEDFE0E0E1E1E2E2E3E4E4E5E5E6E7E7E8E8E9><C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848381807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544>4 %_Br<A4A4A4A5A5A5A5A5A5A6A6A6A5A4A4A3A2A2A1A1A09F9E9D9C9B9A9998979492908E8C8B8A89888685838281807E7D7C7A797775747370706E6B6967666362605E5D5C595857555353504F4E4B4B4A4746454242403E3D3B393837353332302F2E2C2A29292725242221201D1B1A1715151211><00000000000000000000000000000002020203040504040504040604050504040604040506080C0D0E0F101314141517171B1B1B1C1D1C20202222222525262627282C2D2E30313235363738383C3D3D3E3F40424343444545484848494A4A4D4E4E4E4F525252535253555556565656595859><28282A27272929292A28282928282926252626262223222223221E1E1E1D191713110F0F0F0F0E0C0B0B0A0A0A0A0A0A0B09090A09090A090807060605040303030302020202030202020202030202030302030202030303030202020202030202020202010202020202010201010101010202><00000000000000000000000000000000000000000000000001010102020205050607070708080809090A0B0A090A09090A09090A0A090B0909090C0C0A0D0D0D0F0F0C0E0D0D0F0E0C0E0E0D0F0D0C0F0E0E100D0D0F0F0F110F0E10100F110F0F0E10100D0F0F0E10100E100F0F11110F1111><52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5><B4B4B4B3B3B3B3B3B3B2B2B2B2B2B2B1B1B1B1B1B0B0B0B0B0B0AFAFAFAFAFAFAEAEAEAEAEAEADADADADADACACACACACACABABABABABABAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7A7A6A6A6A6A6A6A5A5A5A5A5A5A4A4A4A4A4A4A3A3A3A3A3A2A2A2A2A2A2A1A1A1A1A1A1A0A0A0><E5E5E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0>4 %_Br[0 0.2353 0.6784 0.0118 1 50 100 %_Bs0 0.6431 0.6588 0 1 35.5263 57.3034 %_Bs0.0275 0.0471 0.7569 0.0078 1 50 55.618 %_Bs0.0667 0.349 0.0078 0.0667 1 50 44.9438 %_Bs0.6431 0 0.1569 0 1 50 19.1011 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient)(Unnamed gradient) 0 6 Bd[<ABA9A7A8A6A4A1A19F9C9A9A9B99969693918F8E8C8987878482807F7D7B787775737474726F6D6B68666362605E5C5C5A58575655535151514F4D4C4A4846454442403F3D3B393837353433312F2F2E2C2A28272523211F1D1B19171513110F0E0D0C0B0B0A0908070605040302020101010101010100000000000000000000000000000000><9B9C9DA1A2A3A4A8A9A9AAAFB1B2B2B5B6B7B7BABABABBBEBFBFC0C3C3C3C3C6C6C6C8CBCBCBCBCDCECECED0D0D0D0D3D3D3D3D6D6D6D6D8D8D8D8D9D9D9D9DBDBDBDBDBDBDBDBDBDBDBDADBDBDBDBDCDCDCDBDCDCDCDCDCDCDCDCDBDBDBDADADADADADADADADADADADADADADADADADBDBDBDCDCDDDDDDDEDEDEDEDEDDDDDCDCDBDADAD9D9D8><0708090A0B0B0B0D0D0D0E0F1111121112121211111111101011110F0F0F0F0D0D0D0B09090A0A08080809070707070708080909090A0A0A090A0B0B0C0C0D0D0E0F0F0D0D0D0D0B0C0C0C0A0A0A08060606060404050505050607070809090A0C0D0F110F1113141617191B1C1E1F202122232324252627282927292A2C2D2E303132343536><49494845454545424242423F3C3C3C38373737333333332F2E2E2E2B2B2B2C29282825212122232122232322222222202021211F1F1F1F1E1B1B1C1A1A1B1B19191A1A181819191818181918191A1818191A1B1B1B1C1C1C1D1E1E1F202122232221201F1D1D1C1B1A19181716151412100F0D0B0A0806050301000000000000000000000000><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8><313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282827272727262626262525252524242424232323232222222221212121202020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A191919191818181817171717161616161515151514141414131313131212121211111111101010><656565656565656565656565666666666666666666666666666666666666666666666767676767676767676767676767676767676767676768686868686868686868686868686868686868686868696969696969696969696969696969696969696969696A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6B6B6B6B6B6B6B6B6B6B6B6B>4 %_Br<B4B4B4B4B5B5B5B5B5B5B6B6B7B7B7B8B8B7B7B8B8B8B7B7B7B8B8B8B9B9B9BABABABABABABBBBBBBCBCBCBDBDBEBEBEBEBEBEBEBEBEBEBFC0C0BFBFBEBEBDBDBDBEBDBDBCBCBCBBBBBBBAB9B9B8B8B8B8B7B7B8B7B6B6B5B5B4B4B4B5B5B4B3B3B2B1B1B0B1B1B0B0AEAEADACABAB><08080808080808080808090A0B0C0D0E0F101013141515161718191A1B1C1D1D1E1F2021212223242526262728292A2C2D2E3031323334373B3D3F41434445464748494B4D4E505153545657595B5D5F61636566686A6C6E70727475797A7C7E8082848688898B8D8F91939597999B><2121201F1F1E1E1D1D1C1C1C1B1B1B1B1A19181615141312111111101010100F0D0C0B09080605050404040404040404040404040404040404040404040403030303030303030202020101010202020202030202020101010101010202020202020303040404050505060606060707><010203050607090A0C0D0E0E0F0F10111214161517181A1C1D1E1E1F202021222324252628292A2B2B2C2D2D2E2F2F3030313132323334323132333435363737383839393A3B3B3C3D3D3E3E3F3F3F4040404141424243434344444543434444444545454546464646474748484949><393939393939393939393838383838383838383838383838383838383737373737373737373737373737373737373636363636363636363636363636363636363635353535353535353535353535353535353534343434343434343434343434343434343433333333333333333333><A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6967666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231><D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787777767574737271706F6E6D6C6B6A6968676665>4 %_Br<BFBFBFBFBFBEBEBEBEBFBFBFBFBFBFBEBEBEBEBEBEBEBEBFBFBEBEBEBEBEBEBEBEBEBEBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCBCBCBCBCBBBBBBBABAB9B9B9B8B8B8B8B8B8B7B7B7B6B6B6B5B5B5B5B5B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B4B4B4B4><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000204050708><B2B1AFAEACABAAA9A7A6A5A3A2A09F9E9D9B999896959392908F8D8C8A898886848381817F7E7C7A79777675737371706E6D6B6A6866656362615F5E5D5B5A58575755545251504F4E4D4C4C4A494746444341403F3F3E3D3C3A3938363533333231302E2D2C2B2A28292726242321><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101020202030303030303030304030405050606070707070606060606070808090908090909090909090908070604030201><4B4B4B4B4A4A4A4A4A4A494949494949484848484848474747474747464646464646454545454545444444444444434343434343424242424242424141414141414040404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A39393939><9595959595969696969696969696969797979797979797979798989898989898989898999999999999999999999A9A9A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B9B9B9C9C9C9C9C9C9C9C9C9C9D9D9D9D9D9D9D9D9D9D9E9E9E9E9E9E9E9E9E9E9F9F9F9F9F9F9F9F9F9FA0A0A0A0A0A0><6162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394959697999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0>4 %_Br<070809090A0A0B0B0C0C0D0D0E0E0F1010111212131414151618181A1A1C1C1E1E1F20212223242526272728292A2B2D2D2F2F31313333353637393A3B3C3E3F41424344454648494A4B4D4E4F505253545557585A5B5D5E5F60626365666768696B6C6D6E70717274757678797A7C7D7E7F808283848687888A8B8C8E8F90929394959798999A9C9D9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBEBEBFBF><0C0C0B0A0A0908080707070706060606060606060606060505050404040303020202020202020202020202020202020101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><C1C0C3C5C8CBCDD0D1D1D1D2D2D3D3D2D2D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D1D1D1D1D1D1D0D0D1D1D1D1D0D1D0D1D0D0CFCFCFCFCECECDCDCECECECDCDCDCDCCCCCACBC9CAC9C9C7C8C7C7C7C7C5C4C4C4C4C5C3C3C2C3C2C2C1C1C0C1C0C0BEBFBEBEBEBEBDBDBDBDBCBDBCBCBCBDBCBBBBBABBBABBBABABABABABAB9B9B9B9B9B9B8B8B8B8B8B8B7B7B7B7B7B8B7B7B7B7B7B7B7B7B7B7B7B7B5B5B5B5B5B5B4B4B3B3B3B3B2B2B2><02020202020202020303040404040505050506060606070606060706070707070808080808080807070707070706060606060606060506050605050504040303020202020203030302020202020201020203020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999898979796969595><4444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A4B4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4E4E4E4E4E4F4F4F4F4F4F50505050505051515151515152525252525253535353535354545454545455555555555556565656565657575757575858585858585959595959595A5A5A5A5A5A5B5B5B5B5B5B5C5C5C5C5C5C5D5D5D5D5D5D5E5E5E5E5E5E5F5F5F5F5F5F606060606060616161>4 %_Br<000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102030304050506060606070607><CDCCCBCAC9C8C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8C8B8A8988878584838281807F7E7D7B7B79777775737371706F6E6D6B6B6968686664646261615F5E5D5C5A5A5957575654545250504E4C4C4A484846444242403F3F3D3C3C3A3838363535333131302E2E2C2A2B282627242222201D1D1A171414110F0F0E0D0D0C0B0A0A0A0B0B0B0C0C><ADADAEAEAFAFAEAFAFB0B0B0B1B2B2B3B2B2B3B4B4B4B5B5B5B6B7B5B5B6B6B7B8B7B8B9B9B8B9B9BABABABBBCBBBCBCBBBBBCBCBCBDBEBDBEBFBDBEBEBEBEBFBEBFC0BFC0C0BFC0C1C1C1C2C1C2C2C0C1C1C1C1C2C1C1C2C1C2C1C2C1C2C3C2C3C4C3C4C4C2C3C4C4C5C6C6C7C8C8C8CAC9CBCCCBCCCDCCCDCECBCCCDCBCCCDCECCCDCECBCCCDCBCCCCCACBCCCACBCAC9CBCDCCCECECECECECDCDCDCCCDCECED0D1D3D3D4D4D5D4D4D4D4D4D4D1CECCC9C6C4C1><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101020202020102020101010101010000010000010101010101020202020202030302030404040505060606070807070807070807080908090A090A0B0A0A0B0C0B0B0B0A08070605040303030302020202><BCBCBDBDBDBEBEBEBFBFBFC0C0C0C1C1C1C2C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACACBCBCBCCCCCCCDCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6><363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><3333333333333434343434343434343435353535353535353535353636363636363636363637373737373737373737373838383838383838383839393939393939393939393A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F404040404040404040404041414141414141414141424242424242424242424243434343434343434343444444444444>4 %_Br[0 0.8471 0.2118 0 1 50 100 %_Bs0.6706 0.6078 0.0275 0.2863 1 50 80 %_Bs0.7059 0.0314 0.1294 0.0039 1 50 60 %_Bs0.749 0 0.698 0 1 50 40 %_Bs0.0275 0.0471 0.7569 0.0078 1 50 20 %_Bs0 0.8039 0.6784 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 1 6 Bd[<000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102030304050506060606070607><CDCCCBCAC9C8C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8C8B8A8988878584838281807F7E7D7B7B79777775737371706F6E6D6B6B6968686664646261615F5E5D5C5A5A5957575654545250504E4C4C4A484846444242403F3F3D3C3C3A3838363535333131302E2E2C2A2B282627242222201D1D1A171414110F0F0E0D0D0C0B0A0A0A0B0B0B0C0C><ADADAEAEAFAFAEAFAFB0B0B0B1B2B2B3B2B2B3B4B4B4B5B5B5B6B7B5B5B6B6B7B8B7B8B9B9B8B9B9BABABABBBCBBBCBCBBBBBCBCBCBDBEBDBEBFBDBEBEBEBEBFBEBFC0BFC0C0BFC0C1C1C1C2C1C2C2C0C1C1C1C1C2C1C1C2C1C2C1C2C1C2C3C2C3C4C3C4C4C2C3C4C4C5C6C6C7C8C8C8CAC9CBCCCBCCCDCCCDCECBCCCDCBCCCDCECCCDCECBCCCDCBCCCCCACBCCCACBCAC9CBCDCCCECECECECECDCDCDCCCDCECED0D1D3D3D4D4D5D4D4D4D4D4D4D1CECCC9C6C4C1><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101020202020102020101010101010000010000010101010101020202020202030302030404040505060606070807070807070807080908090A090A0B0A0A0B0C0B0B0B0A08070605040303030302020202><BCBCBDBDBDBEBEBEBFBFBFC0C0C0C1C1C1C2C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACACBCBCBCCCCCCCDCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6><363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><3333333333333434343434343434343435353535353535353535353636363636363636363637373737373737373737373838383838383838383839393939393939393939393A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F404040404040404040404041414141414141414141424242424242424242424243434343434343434343444444444444>4 %_Br<070809090A0A0B0B0C0C0D0D0E0E0F1010111212131414151618181A1A1C1C1E1E1F20212223242526272728292A2B2D2D2F2F31313333353637393A3B3C3E3F41424344454648494A4B4D4E4F505253545557585A5B5D5E5F60626365666768696B6C6D6E70717274757678797A7C7D7E7F808283848687888A8B8C8E8F90929394959798999A9C9D9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBEBEBFBF><0C0C0B0A0A0908080707070706060606060606060606060505050404040303020202020202020202020202020202020101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><C1C0C3C5C8CBCDD0D1D1D1D2D2D3D3D2D2D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D1D1D1D1D1D1D0D0D1D1D1D1D0D1D0D1D0D0CFCFCFCFCECECDCDCECECECDCDCDCDCCCCCACBC9CAC9C9C7C8C7C7C7C7C5C4C4C4C4C5C3C3C2C3C2C2C1C1C0C1C0C0BEBFBEBEBEBEBDBDBDBDBCBDBCBCBCBDBCBBBBBABBBABBBABABABABABAB9B9B9B9B9B9B8B8B8B8B8B8B7B7B7B7B7B8B7B7B7B7B7B7B7B7B7B7B7B7B5B5B5B5B5B5B4B4B3B3B3B3B2B2B2><02020202020202020303040404040505050506060606070606060706070707070808080808080807070707070706060606060606060506050605050504040303020202020203030302020202020201020203020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999898979796969595><4444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A4B4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4E4E4E4E4E4F4F4F4F4F4F50505050505051515151515152525252525253535353535354545454545455555555555556565656565657575757575858585858585959595959595A5A5A5A5A5A5B5B5B5B5B5B5C5C5C5C5C5C5D5D5D5D5D5D5E5E5E5E5E5E5F5F5F5F5F5F606060606060616161>4 %_Br<BFBFBFBFBFBEBEBEBEBFBFBFBFBFBFBEBEBEBEBEBEBEBEBFBFBEBEBEBEBEBEBEBEBEBEBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCBCBCBCBCBBBBBBBABAB9B9B9B8B8B8B8B8B8B7B7B7B6B6B6B5B5B5B5B5B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B4B4B4B4><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000204050708><B2B1AFAEACABAAA9A7A6A5A3A2A09F9E9D9B999896959392908F8D8C8A898886848381817F7E7C7A79777675737371706E6D6B6A6866656362615F5E5D5B5A58575755545251504F4E4D4C4C4A494746444341403F3F3E3D3C3A3938363533333231302E2D2C2B2A28292726242321><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101020202030303030303030304030405050606070707070606060606070808090908090909090909090908070604030201><4B4B4B4B4A4A4A4A4A4A494949494949484848484848474747474747464646464646454545454545444444444444434343434343424242424242424141414141414040404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A39393939><9595959595969696969696969696969797979797979797979798989898989898989898999999999999999999999A9A9A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B9B9B9C9C9C9C9C9C9C9C9C9C9D9D9D9D9D9D9D9D9D9D9E9E9E9E9E9E9E9E9E9E9F9F9F9F9F9F9F9F9F9FA0A0A0A0A0A0><6162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394959697999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0>4 %_Br<B4B4B4B4B5B5B5B5B5B5B6B6B7B7B7B8B8B7B7B8B8B8B7B7B7B8B8B8B9B9B9BABABABABABABBBBBBBCBCBCBDBDBEBEBEBEBEBEBEBEBEBEBFC0C0BFBFBEBEBDBDBDBEBDBDBCBCBCBBBBBBBAB9B9B8B8B8B8B7B7B8B7B6B6B5B5B4B4B4B5B5B4B3B3B2B1B1B0B1B1B0B0AEAEADACABAB><08080808080808080808090A0B0C0D0E0F101013141515161718191A1B1C1D1D1E1F2021212223242526262728292A2C2D2E3031323334373B3D3F41434445464748494B4D4E505153545657595B5D5F61636566686A6C6E70727475797A7C7E8082848688898B8D8F91939597999B><2121201F1F1E1E1D1D1C1C1C1B1B1B1B1A19181615141312111111101010100F0D0C0B09080605050404040404040404040404040404040404040404040403030303030303030202020101010202020202030202020101010101010202020202020303040404050505060606060707><010203050607090A0C0D0E0E0F0F10111214161517181A1C1D1E1E1F202021222324252628292A2B2B2C2D2D2E2F2F3030313132323334323132333435363737383839393A3B3B3C3D3D3E3E3F3F3F4040404141424243434344444543434444444545454546464646474748484949><393939393939393939393838383838383838383838383838383838383737373737373737373737373737373737373636363636363636363636363636363636363635353535353535353535353535353535353534343434343434343434343434343434343433333333333333333333><A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6967666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231><D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787777767574737271706F6E6D6C6B6A6968676665>4 %_Br<ABA9A7A8A6A4A1A19F9C9A9A9B99969693918F8E8C8987878482807F7D7B787775737474726F6D6B68666362605E5C5C5A58575655535151514F4D4C4A4846454442403F3D3B393837353433312F2F2E2C2A28272523211F1D1B19171513110F0E0D0C0B0B0A0908070605040302020101010101010100000000000000000000000000000000><9B9C9DA1A2A3A4A8A9A9AAAFB1B2B2B5B6B7B7BABABABBBEBFBFC0C3C3C3C3C6C6C6C8CBCBCBCBCDCECECED0D0D0D0D3D3D3D3D6D6D6D6D8D8D8D8D9D9D9D9DBDBDBDBDBDBDBDBDBDBDBDADBDBDBDBDCDCDCDBDCDCDCDCDCDCDCDCDBDBDBDADADADADADADADADADADADADADADADADADBDBDBDCDCDDDDDDDEDEDEDEDEDDDDDCDCDBDADAD9D9D8><0708090A0B0B0B0D0D0D0E0F1111121112121211111111101011110F0F0F0F0D0D0D0B09090A0A08080809070707070708080909090A0A0A090A0B0B0C0C0D0D0E0F0F0D0D0D0D0B0C0C0C0A0A0A08060606060404050505050607070809090A0C0D0F110F1113141617191B1C1E1F202122232324252627282927292A2C2D2E303132343536><49494845454545424242423F3C3C3C38373737333333332F2E2E2E2B2B2B2C29282825212122232122232322222222202021211F1F1F1F1E1B1B1C1A1A1B1B19191A1A181819191818181918191A1818191A1B1B1B1C1C1C1D1E1E1F202122232221201F1D1D1C1B1A19181716151412100F0D0B0A0806050301000000000000000000000000><333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8><313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A2A292929292828282827272727262626262525252524242424232323232222222221212121202020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A191919191818181817171717161616161515151514141414131313131212121211111111101010><656565656565656565656565666666666666666666666666666666666666666666666767676767676767676767676767676767676767676768686868686868686868686868686868686868686868696969696969696969696969696969696969696969696A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6B6B6B6B6B6B6B6B6B6B6B6B>4 %_Br[0 0.8039 0.6784 0 1 50 0 %_Bs0.0275 0.0471 0.7569 0.0078 1 50 20 %_Bs0.749 0 0.698 0 1 50 40 %_Bs0.7059 0.0314 0.1294 0.0039 1 50 60 %_Bs0.6706 0.6078 0.0275 0.2863 1 50 80 %_Bs0 0.8471 0.2118 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 0 5 Bd[<030404040404040404040404040505050606060707070707070707070707070707070707060606060606060606050505050505040404040405050404040403030303030303030202020201010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101020202><0D0D0D0D0E0E0E0E0F0F0F101010111111121211111212121213131313131414141515151516161617171717171717171718181819191919171717171717171818181919191A1A1A1A1A1A1A1A1A1B1B1B1C1D1D1E1E1E1E1F1F1F2020211E1F1F20202021212122222323232425252626272728282829292A2A2B2C2C2D2D2E2E2F302D2D2E2E2F303031323333343536373738393A><CBCCCDCDCDCDCDCCCDCDCCCCCCCDCDCDCCCCCDCDCCCCCCCBCCCBCBCBCACBCBCACACACACAC9C9C8C9C9C8C8C7C8C7C7C7C6C7C6C6C6C5C6C5C5C5C4C4C4C4C3C3C2C3C3C2C2C1C2C1C1C0BFC0C0BFBEBEBFBEBDBDBCBDBCBCBBBABCBBBAB9B9B8B9B9B8B7B6B7B7B6B5B4B5B4B3B2B1B2B1B0AFAEB0AFADACABACABAAA9A8A9A8A7A6A4A4A5A3A2A09FA09F9E9D9B9D9C9A9997999795><030404050607090A0B0C0D0E0F10101112131414151617191A1B1C1D1E2021222325262728292A2B2C2D2F30313233343536373738393A3A3B3C3D3E3F404041424343444545464748494A4A4B4C4D4E4E4F505051525253545555565757595A5A5B5C5C5D5E5F5F6061626363646565666768696A6B6C6D6D6E6F7071727374757677797A7A7B7C7D7E7F808182838485868788898A><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261><E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656464636261605F5E5D5C5B5A5958575655545352><4C4C4C4B4B4B4B4B4A4A4A4A4A494949494948484848484847474747474646464646454545454544444444444343434343424242424241414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B3B3B3A3A3A3A3A3A3939393939383838383837373737373636363636353535353534343434343333333333333232323232313131313130303030302F2F2F>4 %_Br<020202010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010202020203030303030303030404040405050404040404050505050505060606060606060606070707070707070707070707070707070706060605050504040404040404040404040403><3A393837373635343333323130302F2E2E2D2D302F2E2E2D2D2C2C2B2A2A29292828282727262625252423232322222121212020201F1F1E2120201F1F1F1E1E1E1E1D1D1C1B1B1B1A1A1A1A1A1A1A1A1A191919181818171717171717171919191918181817171717171717171716161615151515141414131313131312121212111112121111111010100F0F0F0E0E0E0E0D0D0D0D><95979997999A9C9D9B9D9E9FA09FA0A2A3A5A4A4A6A7A8A9A8A9AAABACABACADAFB0AEAFB0B1B2B1B2B3B4B5B4B5B6B7B7B6B7B8B9B9B8B9B9BABBBCBABBBCBCBDBCBDBDBEBFBEBEBFC0C0BFC0C1C1C2C1C2C2C3C3C2C3C3C4C4C4C4C5C5C5C6C5C6C6C6C7C6C7C7C7C8C7C8C8C9C9C8C9C9CACACACACACBCBCACBCBCBCCCBCCCCCCCDCDCCCCCDCDCDCCCCCCCDCDCCCDCDCDCDCDCCCB><8A898887868584838281807F7E7D7C7B7A7A7977767574737271706F6E6D6D6C6B6A6968676665656463636261605F5F5E5D5C5C5B5A5A595757565555545352525150504F4E4E4D4C4B4A4A494847464545444343424140403F3E3D3C3B3A3A39383737363534333231302F2D2C2B2A2928272625232221201E1D1C1B1A19171615141413121110100F0E0D0C0B0A09070605040403><6162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6><52535455565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3><2F2F2F3030303030313131313132323232323333333333333434343434353535353536363636363737373737383838383839393939393A3A3A3A3A3A3B3B3B3B3B3C3C3C3C3C3D3D3D3D3D3E3E3E3E3E3F3F3F3F3F404040404041414141414142424242424343434343444444444445454545454646464646474747474748484848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C>4 %_Br<030404040404040404040404040505050606060707070707070707070707070707070707060606060606060606050505050505040404040405050404040403030303030303030202020201010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101020202><0D0D0D0D0E0E0E0E0F0F0F101010111111121211111212121213131313131414141515151516161617171717171717171718181819191919171717171717171818181919191A1A1A1A1A1A1A1A1A1B1B1B1C1D1D1E1E1E1E1F1F1F2020211E1F1F20202021212122222323232425252626272728282829292A2A2B2C2C2D2D2E2E2F302D2D2E2E2F303031323333343536373738393A><CBCCCDCDCDCDCDCCCDCDCCCCCCCDCDCDCCCCCDCDCCCCCCCBCCCBCBCBCACBCBCACACACACAC9C9C8C9C9C8C8C7C8C7C7C7C6C7C6C6C6C5C6C5C5C5C4C4C4C4C3C3C2C3C3C2C2C1C2C1C1C0BFC0C0BFBEBEBFBEBDBDBCBDBCBCBBBABCBBBAB9B9B8B9B9B8B7B6B7B7B6B5B4B5B4B3B2B1B2B1B0AFAEB0AFADACABACABAAA9A8A9A8A7A6A4A4A5A3A2A09FA09F9E9D9B9D9C9A9997999795><030404050607090A0B0C0D0E0F10101112131414151617191A1B1C1D1E2021222325262728292A2B2C2D2F30313233343536373738393A3A3B3C3D3E3F404041424343444545464748494A4A4B4C4D4E4E4F505051525253545555565757595A5A5B5C5C5D5E5F5F6061626363646565666768696A6B6C6D6D6E6F7071727374757677797A7A7B7C7D7E7F808182838485868788898A><F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261><E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656464636261605F5E5D5C5B5A5958575655545352><4C4C4C4B4B4B4B4B4A4A4A4A4A494949494948484848484847474747474646464646454545454544444444444343434343424242424241414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B3B3B3A3A3A3A3A3A3939393939383838383837373737373636363636353535353534343434343333333333333232323232313131313130303030302F2F2F>4 %_Br<020202010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010202020203030303030303030404040405050404040404050505050505060606060606060606070707070707070707070707070707070706060605050504040404040404040404040403><3A393837373635343333323130302F2E2E2D2D302F2E2E2D2D2C2C2B2A2A29292828282727262625252423232322222121212020201F1F1E2120201F1F1F1E1E1E1E1D1D1C1B1B1B1A1A1A1A1A1A1A1A1A191919181818171717171717171919191918181817171717171717171716161615151515141414131313131312121212111112121111111010100F0F0F0E0E0E0E0D0D0D0D><95979997999A9C9D9B9D9E9FA09FA0A2A3A5A4A4A6A7A8A9A8A9AAABACABACADAFB0AEAFB0B1B2B1B2B3B4B5B4B5B6B7B7B6B7B8B9B9B8B9B9BABBBCBABBBCBCBDBCBDBDBEBFBEBEBFC0C0BFC0C1C1C2C1C2C2C3C3C2C3C3C4C4C4C4C5C5C5C6C5C6C6C6C7C6C7C7C7C8C7C8C8C9C9C8C9C9CACACACACACBCBCACBCBCBCCCBCCCCCCCDCDCCCCCDCDCDCCCCCCCDCDCCCDCDCDCDCDCCCB><8A898887868584838281807F7E7D7C7B7A7A7977767574737271706F6E6D6D6C6B6A6968676665656463636261605F5F5E5D5C5C5B5A5A595757565555545352525150504F4E4E4D4C4B4A4A494847464545444343424140403F3E3D3C3B3A3A39383737363534333231302F2D2C2B2A2928272625232221201E1D1C1B1A19171615141413121110100F0E0D0C0B0A09070605040403><6162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6><52535455565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3><2F2F2F3030303030313131313132323232323333333333333434343434353535353536363636363737373737383838383839393939393A3A3A3A3A3A3B3B3B3B3B3C3C3C3C3C3D3D3D3D3D3E3E3E3E3E3F3F3F3F3F404040404041414141414142424242424343434343444444444445454545454646464646474747474748484848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C>4 %_Br[0.0078 0.2275 0.5843 0.5412 1 50 100 %_Bs0.0118 0.051 0.7961 0.0118 1 50 78.0899 %_Bs0.0078 0.2275 0.5843 0.5412 1 50 53.9326 %_Bs0.0118 0.051 0.7961 0.0118 1 50 28.0899 %_Bs0.0078 0.2275 0.5843 0.5412 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 27)(Unnamed gradient 27) 1 4 Bd[<0B0B0B0A0A0A0A0A0A090A0A0909090909090808080808080708070807070707070707070606060606060606060606060606060606060606060606060606050606060506060506060606060606060606070606060605060606060606060606060606060706060606060506060606060606060606060706060606060606060505060606060707070606060606060606060606060505050505050505><1919191818181818181717171717171717171717171717171717171716161616161616161515151516161616161616161617161617161617161616161616161717171718181818181818181818171718181818181919191919191919191919191919191A191A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1B1B1B1B1B1C1C1C1D1D1D1D1D1D1D1D1D1D1D1D1D1E1F202021222222><2D2D2D2D2D2D2A2D2D2A2D2D2C2C292C292C292C292B282B282B282B28282828282929292929292529292529292529252529252529252529252525252626222626262226262222262622232727232323272323242420242424242020242520202121212621212222221E1E222222221E1E1F1F1F202420202121212121211C1C1D1D1E1E2424252020212120212020202122231D1E1F1F20212121><52525253535354545455555556565757585859595A5A5A5A5B5B5C5C5D5E5E5F5F60606061616263636465646566666768686969696A6B6B6C6D6E6E6F7071717272747374757676777879797A7B7C7D7D7E7F808082818283848586868788898A8B8C8C8D8E8F90919293939495969798999A9B9C9C9D9E9FA0A2A3A4A5A6A7A8A9AAABABACADAFB0B1B2B3B4B5B7B8B9BABBBCBEBFC0C1C2C4C5><A1A1A1A0A0A09F9F9F9E9E9E9D9D9C9C9B9B9A9A9999989897979696959494939392919190908F8E8E8D8C8C8B8A8A89888887868685848483828181807F7E7E7D7C7B7B7A797878777675757473727171706F6E6D6C6C6B6A6968676766656463626161605F5E5D5C5B5A5A59585756555453525151504F4E4D4C4B4A49484746454443434241403F3E3D3C3B3A393837363534333231302F2E2D><9C9C9C9B9B9B9A9A9A99999998989797969695959494939392929191908F8F8E8E8D8C8C8B8B8A8989888787868585848383828181807F7F7E7D7C7C7B7A79797877767675747373727170706F6E6D6C6C6B6A6968676766656463626261605F5E5D5C5C5B5A59585756555554535251504F4E4D4C4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928><9494949393939392929291919090908F8F8E8E8D8D8C8C8B8B8A8A89898888878786858584848383828181807F7F7E7E7D7C7C7B7A7A79787877767675747473727171706F6F6E6D6C6C6B6A696968676666656463636261605F5F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C4B4A4948484746454443424141403F3E3D3C3B3A39393837363534333231302F2E2E2D2C2B2A292827>4 %_Br<0505050504040404040405050505080B0E11131617171B1C1D1E1F><222121212120201F20282F363C3734373835323032343537393B3D><21212121211C1C1B1B1F2224272424282B2C2C2E2F313032343537><C5C7C8CACBCDCED0D1D2D3D5D6D8DBDDDFE1E2E4E5E5E5E6E6E7E7><2D2C2B2A292827262524232221201E1D1C1B1A1918171615141312><2827262524232221201F1E1D1C1C1B1A191817161514131211100F><2726252423232221201F1E1D1C1C1B1A1918171615141413121110>4 %_Br<1F1D1817130D070504040404050605050607070707070707070707080607080608060808070708070807080807070807070808080707080808080807080808080808080808080807080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808><3D393632323D403131221A1F1A1B21211B1C1C2221201F191E1D1D1D231D1E231E231E1E24241E241E231E2323232323231E232322221D22222222221D22222222222222222222221C2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222><3734332F2C2D2A2B2C272422222227212329292C2C2B2A262A29282E2B272C292B292B2B2F2F2B2F2B2E30332E2E332E2E2F32322D2D2F323232322D2E313131313131313131312C2E3131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131><E7E6E6E5E2DEDAD9D7D4D3D0CECDCAC8C7C5C4C1C0BEBDBEBCBBBAB8B7B7B6B5B5B4B4B3B1B1B2B0B0AFAFAEAEAEADADADADABABACACACAAAAAAAAABABA9A9A9A9A9A9A9A9A9A9AAAAA8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8><121416181A1C1E1F2123242627282A2B2C2D2E3031323333343536373838393A3A3B3B3C3D3D3D3E3E3F3F4040404141414142424242424343434343434444444444444444444444444545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545><0F11131517181A1C1D1F20212324252628292A2B2C2D2E2F2F30313232333434353536373737383839393A3A3A3A3B3B3B3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F><1012131517181A1B1C1E1F202122232526262728292A2B2C2C2D2E2E2F3030313132323333333434353535353636363737373737383838383838383939393939393939393939393A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A>4 %_Br[0.0431 0.098 0.1765 0.3216 1 59.434 0 %_Bs0.0196 0.1333 0.1294 0.7725 1 50 60 %_Bs0.1216 0.2392 0.2157 0.9059 1 13 60.5 %_Bs0.0314 0.1333 0.1922 0.6588 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 29)(Unnamed gradient 29) 1 3 Bd[0.09020.1020.16860.18820.78040.77650.7494 %_Br<1718181918181817171717171717161616151514141414131312121212111110100F100F0F0E0E0D0C0C0B0B0C0B0B0A0909090A0908080808070807070707060707060606060606060607070606070706060607060606060606070606060707070707070607070607070607070607070607070607060607060707060706080707070707070807070707070707070707070706070607060706070807080708070707070707080707070708070707070807070807070807070807070807070709070707090707070708080808080808080808080808><1A1B1B1C1B1B1A1A1A19191C1B1B1B1B1A1A1A1A1916161518171716161615141417141413131211141313120F0F0E111010100D0D10100F0F0F0F0F0E0E0E120E0E0E0E120E0E0E12120E0E12120E0E1212120E1212121313130F131413141414141414181414171413181414181415191519191519191519151A191A191519191A191A1A151A1A1A1A1A1A1B1A1B1A1B1A1F1A1F1A1F1A1F1A1B1A1B1F1B1F1B201B20201B201B20201C211C21211C21211C21211C21211C21211C2121211C2121211C2121212121212121212122222222222222><2B2B2C2C2C2B2B2B2B2A2B2C2C2C2C2C2A2A2A2929292828292929292929262626272828272625222322222223232322222222232221212020202320202020222020202023202020222220202223202023231F2123231F2324242124242024242424242423242523252523252523252624262824262424262426292529252725252A252A262826262A262B262B262B262B2629272A272A272A282C282D2B2D2B292C292C2C2E2C292C2C2F2D2A2D2D2F2D2D2F2D2D2F2E2E302E2E2B2F2F2F312F2F2F323030303031313131313131313131313131><303031323334353637383938393A3B3C3D3E3F4041424344434445464748494A4B4B4C4D4E4F505151525354555657575859595A5B5B5C5D5E5F5E5F6061626263646465656667686768696A6A6B6C6D6D6D6F706F707171727374747576767677777879797A7B7B7C7D7D7E7F7F8081808281828383848585868687878889898A8A8B8B8C8D8D8E8E8F8F9090919192929392949395949695979798989899999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A8A8><C7C6C5C4C3C2C1C0BFBEBDBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A9A8A7A6A5A4A3A3A2A1A09F9E9D9D9C9B9A999898979695949493929190908F8E8D8C8C8B8A89898887868685848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6C6B6A6A69686867676666656464636362626160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555555454535352525251515050504F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A4949494948484848474747474746464646464645454545454545><C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9D9C9B9A9998979796959493929191908F8E8D8C8C8B8A898888878685848483828181807F7E7D7D7C7B7A7A79787877767575747373727170706F6E6E6D6C6C6B6A6A696868676666656464636362616160605F5E5E5D5D5C5C5B5A5A59595858575756565554545353525251515150504F4F4E4E4D4D4C4C4C4B4B4A4A4A49494848484747474646464545454444444343434342424242414141414040404040403F3F3F3F3F3F3F><BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9B9A99989796959494939291908F8F8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7B7A79787877767575747372727170706F6E6D6D6C6B6B6A696968676766656564636362616160605F5E5E5D5C5C5B5B5A5A5958585757565655545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494948484747464646454544444443434242424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A3A>4 %_Br[0.0902 0.102 0.1686 0.1882 1 50 0 %_Bs0.0902 0.102 0.1686 0.1882 1 35.5932 4 %_Bs0.0314 0.1333 0.1922 0.6588 1 50 25.2809 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 2 Bd[000<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>1 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 55)(Unnamed gradient 55) 1 4 Bd[<000103040607080A0B0C0E0F101213151618191A1B1C1D1D1E1F1F20212121222323242525262626272728292A2B2C2D2D2E303031323334353636373838393A3A3B3D3D3E404142444546464647474849494A4B4C4C4D4C4D4E4F4F505152535354555758595B5C5B5D5E606061636363656666676869696B6B6C6D6E707070727274747476><000100020302040504060706080908090A08090A08080707080707080606070607070708080708080808070708060709070807080908090A080A08090B090B0C0A0B0B0C0D0C0E0E0E0F0D0E100E0F0E0E0F0D0E0C0D0D0D0E0C0D0D0C0D0B0C0C0C0E0D0F0C0E0F0E100F100E100E11110F110F111012101111131113121512141416141616><00000303030606060909090C0C0C0F0E0E10100E110F10100E0F0F0D0D0D0C0C0A0A0B09090A090A09080A09090A0A0A0B0B0C0C0C0D0D0D0E0D0F0F0E0F0E0D0F0E10100F100F0F100F110F0D0F0D0D0B0B0B090B090709070707070706070707070709090A0A0B0A0B0C0C0E0E100E0E0F0F0F0E0F0E0E0E0E0D0E0D0D0C0D0C0C0B0C0B0B><0000010101020202020202030303030202010101010101010101010202020303030404040404050505060606060606050605050605050506050506060607070607070708070505050403040404050505060607070809090A0A0B0B0C0C0D0E0D0D0D0C0B0A0B0A090B0A09080A0908070908080A0909080B0A0A090B090A080B0909080B090A><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9D9C9B9A9998979796959493939291908F8F8E8D8C8B8B8A898988878786><FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F4F4F3F2F2F1F1F0EFEFEEEDEDECEBEBEAE9E9E8E7E7E6E6E5E4E4E3E2E2E1E0E0DFDFDEDDDDDCDBDBDADAD9D8D8D7D6D6D5D5D4D3D3D2D1D1D0D0CFCECECDCDCCCBCBCACAC9C8C8C7C7C6C5C5C4C4C3C3C2C1C1C0C0BFBEBEBDBDBCBCBBBBBAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAF><FFFFFEFEFEFDFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E0E0E0E0DFDFDFDEDEDEDEDDDDDDDDDCDCDCDBDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7D7>4 %_Br<767778797B7C7C7D7E808081838484868788898A8B8D8D8F90919293959597989A9B9C9FA1A2A3A3A5A6A6A7A9AAABACAEAFAEAFB0><161816171617151615161415141514151415131513141112100E0E0C0E0C0E0D100E10101210121214131312141311131315131514><0B0B0D0B0B0A0B0A0A0A09090909090909090909090A090A0A0A09090A090A0A0A0C0C0F1012121212121111101011111413141313><0A08090909090A0A0B0B0C0C0D0D0E0E0E0E0F0E0F0D0F0E0E0E0E0F0D100E0E0D0F0D0C0A0C0A0A09090B0B0A0A0B0A09080A0909><868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A59585756565554><AFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999999989897979696><D7D7D6D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0CFCFCFCFCECECECECDCDCDCDCDCCCCCCCCCBCBCBCBCACACA>4 %_Br<B0B0B0B0B1B1B1B1B2B2B1B2B2B2B2B3B3B2B3B3B4B3B3B4B3B5B4B4B6B5B5B6B6B6B7B8B8B8B9B9B9B9BABBBBBBBBBCBCBDBCBDBDBFBDBEBEBFBFBFC0C1C1C1C1C1C2C1C2C1C2C4C3C4C4C4C4C5C6C6C6C6C7><14141416151516161717181819191A1A1B1E1C1F1C1D211E2022202224222325272427282926292A2B282B2C2D2D2F2E3030323334363435363738393B3C3D3E3C3D3E3F40424345464749494A4B4C4D4E4F50><13131313131313131313121212121012110E110E110E0C0E0B0B0B0A0A0A0A0A0A090A0A0909090909080908080808080707070707070707060606060707070606060605050505060505050505050504040404><0909090909090A0A0A0A0B0B0C0C0D0C0D0D0E0D0E100F11141215151316171515181617171B1819191D1A1B1B1C1D1D1D1E1F20211E2122232425252324242528292A2B2C2D2E2C2E2F303131323333343536><5454545453535353525252515151515050504F4F4E4E4E4D4D4C4C4C4B4B4A4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3939383837373635353434333332313130302F><969696959595949493939292919190908F8E8E8D8D8C8B8B8A89898887878685848483828181807F7E7E7D7C7B7A7979787776757473737271706F6E6D6C6B6A6A696867666564636261605F5E5D5C5B5A5958><CACACAC9C9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABAAA9A9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9A99999897969594939291908F8E>4 %_Br[0 0 0 0 1 46.6667 9.4444 %_Bs0.4627 0.0863 0.0431 0.0392 1 48.0769 43.3333 %_Bs0.6902 0.0784 0.0745 0.0353 1 59.6154 71.1111 %_Bs0.7804 0.3137 0.0157 0.2118 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Violet Eye)(Violet Eye) 1 5 Bd[<393B3F41404746494F4E5554575A596367737C888D8D98999BA19D9B9998959496989A9B9CA2A1A3A2A2A0A4A4A5A6A8A9A8ABAAAAA9A9A7A9A9A7A9A8AAABAAACADACADACADACABABACAAABACA9ABACABABADABADAEABACAEABADADAEACADAFACADAEAEAEAFAFAFADAEB0B0AFAFB0AFAFB0B0B2B1B0B0B1B1B3B0B2B2B2B2B3B3B3B3B3B2B2B3B3B4B4B2B4B3B5B5B5B3B3B3B5B4B4B6B4B5B5B5B5B6B5B4B5B5B5B6B6B6B6B6B5B5B7B7B7B7B7B7B7B6B6B8B8B6B6B8B8B8B8B8B7B7B7B7B7B8B8B8B8B7B7B9B9B9B8B8B8B8B9B8B8B8B8B8B8B8B9B9B9B9B9B8B8B7B7B9B9B9B9B9B9B9B9B9B9B9BABAB9B9B9B9B9B9B9B9B9B9B9B9B9BBBBBBBBBBBABABABABABABABABABABABAB8B8B8B8B8B8B8B8B8BABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABA><504F4D4D4B4A484746444342413F3D3D3D3F3E4244495053555A5B565C57534D4C454A434244444949484852504D524E4A484B49474E4C4B504E4E5252545252555357555457525655585755575456535752555456545553565355545657565855575656595757565755585857575955585656585557575555575556565454565654545454545555535354565354545453535355525253545252525253515152525251515151525050515151514F4F4F505051514E4E4F4F4F4F4F4F4F4F4F4F505050504D4D4E4E4E4F4F4F4F504E4E4E4E4E4E4E4F4F4F4F4F4D4D4D4D4E4E4E4E4E4E4E4E4E4E4E4F4F4D4D4D4D4D4D4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4C4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D><4C4849464443413D3C3B3938343533302C2321191C191C1B1B18131007070606050404040302020202010101000100010102020202010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101000001010101010101010101010101010101010101010101010101010101010101010101010101010102010102020202020202020202020202020202020202020202020303030303030303030303030303030303030303030303030303030303030303030303030303030303040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404><F1EFEDECEBE8E8E6E3E3E0E0DEDCDCD8D6D0CDC8C6C4C0BEBCB9B9B9B6B5B4B3AFAFACACABA7A6A3A2A1A09B9A999796959491908F8D8C8C89898886858282817E7E7B7A7A777976757372716F716E6E6B6E6B6B68686867656664636160605E5F5D5D5D5A5A5A5959595757565654565353535152505050504E4F4D4D4D4D4B4B4A4A4A4A4A474747474745464444444444444243434141414141413E40403E3E3E3D3D3D3D3B3D3D3A3A3A3A3A3A3A3A3A383839393737373737363636363634343434363633333333333333313333333333333330303030303232323230303030303030303030302D2D2F2F2F2F2F2F2F2F2F2F2F2F2F2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2E2E2E2E2E2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B><000101020303040505060607080809090A0B0B0C0C0D0D0E0F0F10101111121213131414151516161717181819191A1A1A1B1B1C1C1D1D1E1E1E1F1F20202021212122222323232424242525252626262727272828282929292A2A2A2A2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F303030303031313131313232323232333333333334343434343435353535353536363636363636373737373737373838383838383838393939393939393939393A3A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E><000102030405060708090A0B0C0D0E0F10111213141415161718191A1A1B1C1D1E1F1F202122232324252626272828292A2B2B2C2D2D2E2F2F30313132323334343535363737383839393A3B3B3C3C3D3D3E3E3F3F40404141424243434344444545464646474748484949494A4A4A4B4B4C4C4C4D4D4D4E4E4E4F4F4F5050505051515152525252535353535454545455555555565656565757575757585858585859595959595A5A5A5A5A5A5B5B5B5B5B5B5B5C5C5C5C5C5C5C5D5D5D5D5D5D5D5D5D5E5E5E5E5E5E5E5E5E5E5F5F5F5F5F5F5F5F5F5F5F5F606060606060606060606060606060606061616161616161616161616161616161616161616161616161616161616162626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262><03050608090B0C0E101113141617181A1B1D1E20212224252628292A2C2D2E2F31323334353738393A3B3C3E3F404142434445464748494A4B4C4D4E4F50515253545556575858595A5B5C5D5E5E5F606161626364656566676768696A6A6B6C6C6D6E6E6F7070717172737374747575767777787879797A7A7B7B7C7C7D7D7E7E7F7F7F8080818182828283838484848585858686868787888888888989898A8A8A8B8B8B8B8C8C8C8D8D8D8D8E8E8E8E8E8F8F8F8F909090909091919191919292929292929393939393939394949494949494949595959595959595959696969696969696969696979797979797979797979797979797989898989898989898989898989898989898989898989898989899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999>4 %_Br<BABBBBBCBBBCBCBDBDBDBDBDBEBEBEBEBFBEBEBEBEBFBFBEBEBEBEBEBEBDBDBDBDBDBCBCBBBBBBBBBBBBBABABAB9B9B8B8B8B7B7B6B6B6B5B5B4B4><4D4C4A49484745444341403F3E3C3B3A3938373635333231302F2E2D2C2827262524232221201F1E1D1C1B1A1918171615151413121111110F0E0D><04050505060606060607070707070808080808080909090909090A0A0A0C0C0C0D0D0D0D0D0E0E0F10101011111111111212121212131414141415><2B2A292827262524222120201F1E1D1D1C1B1A1A1918181716161515141515141313121211100F0E0C0B0B0A0A0909080707060605040302020201><3E3E3E3E3F3F3F3F3F3F40404040404040414141414141424242424242434343434343434444444444444545454545454546464646464647474747><62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D><999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3>4 %_Br<B4B4B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B6B6B6B6B5B5B4B2B2B1B0B0AEADACABA9A9A7A6A5A5A3A3A0A19F9E9D9B9896979491908E8C88878483817F7D79777673716E6B69686563><0D0D0D0D0E0E0E0E0E100F0F11101011101010100F12101412161516171819171B1B1E1E1F20212126262828292A2D2D2F303032333538393D3D3E40414444474A4B4D505053565658><15151515141414161614161614161613151514141614151413121313120F0E0E0D0C0B0909090808090808080707080707070606060605040303030202020304030404050606060707><010101010202020202020202020202030404050507060705090709090A0B0C0E0C0F0D10100F0F120E110E12121111141715191919191A1C1B1D1E1E1E1D1F1F1C1F1F1F21211E2021><4747474848484849494A4A4A4B4B4C4C4D4D4E4F4F5050515252535454555656575858595A5B5B5C5D5E5F5F60616263646465666768696A6B6C6C6D6E6F707172737475767778797A><9D9D9D9D9C9C9C9C9C9B9B9B9A9A9A99999998989897979696959595949493939292919190908F8F8E8E8D8D8C8C8B8B8A89898888878686858584838382828180807F7E7E7D7C7C7B><D3D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C6C6C5C5C4C3C3C2C1C1C0C0BFBEBEBDBCBBBBBAB9B9B8B7B6B6B5B4B3B3B2B1B0B0AFAEADACABABAAA9>4 %_Br<6362605F5F5D5C5C59595756565353525150504E4E4D4C4B4B49494747464544444242424040403E3E3D3C3B3A39393737373535353333323131312F2F2E2E2E2C2C2C2B2B2B29292928282726262524242323222121211F1F1F1E1D1C1C1C1B1A1A19191917171716151513131211110F0F0F0D0D0D0B0B0B09090807060504040302020000><58585656555453535151504F4F4D4D4C4B4B4A49494948474746454444444342424141403F3F3F3D3D3D3C3C3A3A3A39383837373635353433333332313030302E2E2E2F2F2F2E2D2D2C2C2B2A2A29282826262624242422222120201F1E1E1D1D1C1B1B1A19191817171615141312121010100E0E0E0C0C0B0A090907070505040302020000><0706070605050504040303030202020102020203030304040405050606060706060606050605050505050505060605050504040404040303040403040405040405050505050506060607070807060706050605050504040404040404040403040403050504060505060505060506050506060607070707070606050505040403020202010100><2120222120222120232224232224242324232223212021201F201F201F1E1F1E1D1F1E1D1E1D1C1E1D1C1E1D1E1D1C1E1D1C1E1D1C1E1D1C1D1C1B1C1B1B1A191A19181716141514131312131211131211121110111110111111111011100F0F0E0D0E0D0C0C0B0A0A0A09090809080808080808080708070707060505040403020302010100><7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><A9AAAAABACACADAEAEAFAFB0B1B1B2B3B3B4B5B5B6B7B7B8B9B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D0D1D2D2D3D4D4D5D6D6D7D8D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEEEEEFEFF0F1F1F2F3F3F4F5F5F6F7F7F8F9F9FAFAFBFCFCFDFEFEFF>4 %_Br[0.2235 0.3137 0.298 0.9451 1 16.6667 25.8427 %_Bs0.7294 0.302 0.0157 0.1686 1 50 49.4382 %_Bs0.7059 0.051 0.0824 0.0039 1 61.5385 64.6067 %_Bs0.3882 0.3451 0.0275 0.1294 1 50 70.2247 %_Bs0 0 0 0 1 50 78.6517 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (White, Black)(White, Black) 0 2 Bd[<0000010102020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0E0E0F0F101010111112121313131414151516161617171818181918181817171716161615151515141414131312121211111010100F0F0E0E0D0D0C0C0B0B0A0A090908080707070606060606060505050505040404040404040505050505050505050505050505050505050606060606060606060606060606060707070707070707070707070707070707070708080808080808080808080808080808080808080808080808080808080808080808080807070707070706060606060606090B0E1013151718191A1B1C1D1E1F20212122232425262728><00000101020203030304040505060606070708080909090A0A0B0B0B0C0C0D0D0E0E0F0F101011111212121313141415151616171718181819191A1A19191918181717171616151515141413131212111110100F0F0E0E0D0D0C0B0B0A0A09080807060605050404030303030202020201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060B0F14181D2022242627292B2D2F3032343638393B3D3F41><0001020303040506060708090A0A0B0C0D0E0F10111112131415161718191919191A1A1A1B1B1B1B1C1C1C1C1D1D1D1E1E1E1E1F1F1F1F20202021212020201F1F1F1F1E1E1E1E1D1D1D1C1C1B1B1A1A19181817171616151514131211100F0E0D0C0B0A090807060606050505040404030303020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303040404040404040404040404040505050506060606070707070808080D12161B1F2326282A2C2D2F3132343638393B3D3F40424445><0001020303040506070809090A0B0C0D0E0F0F10111213141516161718191A1B1C1D1D1E1F20212223242525262728292A2B2C2D2D2E2F30313233343536373738393A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515253545455565758595A5B5C5D5E5F6060616263646565666768696A6B6C6C6D6E6F70717273747575767778797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A8A9AAABACADAEAFB0B1B2B3B5B6B7B8B9BABBBCBEBFC0C1C2C3C5C6C8C9CBCCCECFD1D2D3D5D6D8D9DADCDEDFE1E2E4E5E5E6E7E7E8E9E9EAEAEBECECEDEDEEEFEFF0><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807>4 %_Br[0.1569 0.2549 0.2706 0.9412 1 50 100 %_Bs0 0 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.698 0.5843 0.0235 0.2471 k 0.698 0.5843 0.0235 0.2471 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.4392 0.0078 0.7451 0.1176 k 0.4392 0.0078 0.7451 0.1176 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1333 0.0275 0.6235 0.4392 k 0.1333 0.0275 0.6235 0.4392 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.0941 0.0392 0.7765 0.1216 k 0.0941 0.0392 0.7765 0.1216 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.7569 0.0039 0.7059 0.1373 k 0.7569 0.0039 0.7059 0.1373 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d64.0161 21.3906 m64.0161 7.9009 L52.3345 1.1543 L40.6475 7.9009 L40.6475 21.3906 L52.3345 28.1372 L64.0161 21.3906 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d37.479 21.394 m37.479 7.9014 L25.7944 1.1548 L14.1099 7.9014 L14.1099 21.3911 L25.7944 28.1406 L37.479 21.394 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d24.3691 44.0386 m24.3691 30.5459 L12.6846 23.7993 L1 30.5459 L1 44.0356 L12.6846 50.7852 L24.3691 44.0386 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d77.2871 44.3774 m77.2871 30.8843 L65.603 24.1382 L53.9185 30.8843 L53.9185 44.3765 L65.603 51.1226 L77.2871 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d50.7471 44.3774 m50.7471 30.8843 L39.0649 24.1382 L27.3774 30.8843 L27.3774 44.3765 L39.0649 51.1235 L50.7471 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d37.479 67.3599 m37.479 53.8682 L25.7944 47.1221 L14.1099 53.8682 L14.1099 67.3599 L25.7944 74.1074 L37.479 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.2275 0.5843 0.5412 k 0.0078 0.2275 0.5843 0.5412 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d64.0161 67.3599 m64.0161 53.8682 L52.3345 47.1221 L40.6475 53.8682 L40.6475 67.3599 L52.3345 74.1074 L64.0161 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0.3176 0.7765 0.2431 k 0 0.3176 0.7765 0.2431 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 0.7294 0 0.6824 0 k 0.7294 0 0.6824 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.2588 0 0.5922 0.0039 k 0.2588 0 0.5922 0.0039 K) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0.5647 0.0078 0.1412 k 0.3451 0.5647 0.0078 0.1412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0.5647 0.0078 0.1412 k 0.3451 0.5647 0.0078 0.1412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0.5647 0.0078 0.1412 k 0.3451 0.5647 0.0078 0.1412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0.5647 0.0078 0.1412 k 0.3451 0.5647 0.0078 0.1412 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.698 0.5804 0.0235 0.2588 k 0.698 0.5804 0.0235 0.2588 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.102 0.0745 0.1333 0.1608 k 0.102 0.0745 0.1333 0.1608 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.0824 0 0.0706 0.6824 k 0.0824 0 0.0706 0.6824 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.0941 0.0275 0.098 0.3216 k 0.0941 0.0275 0.098 0.3216 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.0863 0 0.0627 0.4784 k 0.0863 0 0.0627 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.2235 0.3137 0.298 0.9451 kPc0 0 0 0 kPc0.1569 0.2549 0.2706 0.9412 kPc0.0314 0 0.0118 0.6706 kPc0.0196 0 0.0078 0.4941 kPc0.0471 0.0392 0.0667 0.3255 kPc0.0784 0.0824 0.1176 0.1647 kPc0 0.8196 0.6824 0 kPc0 0.6431 0.6588 0 kPc0 0.451 0.4784 0 kPc0 0.2588 0.298 0.0078 kPc0.6431 0 0.7294 0 kPc0.4863 0 0.6 0 kPc0.3176 0 0.4471 0 kPc0.1647 0 0.2784 0.0235 kPc0.7882 0.2392 0.0314 0.102 kPc0.651 0.1922 0.0314 0.0588 kPc0.4118 0.1608 0.0157 0.0549 kPc0.2039 0.1098 0.0118 0.0431 kPc0 0.4196 0.8275 0.0039 kPc0 0.3412 0.6745 0.0039 kPc0 0.251 0.4706 0.0118 kPc0 0.1608 0.2941 0.0196 kPc0.2784 0.7098 0.051 0.1255 kPc0.2039 0.5294 0.0196 0.1137 kPc0.1608 0.3647 0.0078 0.0706 kPc0.1098 0.2118 0.0235 0.051 kPc0.6431 0 0.1569 0 kPc0.5176 0 0.1608 0 kPc0.3529 0 0.1137 0 kPc0.1922 0 0.0784 0.0078 kPc0.0196 0.0627 0.6745 0 kPc0.0157 0.0471 0.6235 0 kPc0.0157 0.0314 0.4627 0.0078 kPc0.0235 0.0392 0.2824 0 kPcBb2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPcBb0 0 0 0 Bh2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPcBb2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPcBb2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPcBb0 0 0 0 Bh2 (Violet Eye) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPcBb2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BBPc(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 255 79 79 Lb(Background Box) Ln0 A1 Ap0 J 0 j 1 w 4 M []0 d564.6299 11.9414 m15.0503 11.9414 L15.0503 94.2939 L564.6299 94.2939 L564.6299 11.9414 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au0 Ap0 O0.7608 0.3098 0 0.3176 k0 J 0 j 1 w 4 M []0 d29.7026 58.1182 m40.311 78.6826 61.8101 90.2881 77.7217 84.0479 c81.5122 82.5576 84.6367 80.1826 87.0615 77.1611 C84.4697 82.2373 80.396 86.1729 74.9673 88.3076 c59.0576 94.5479 37.5576 82.9404 26.9473 62.374 c18.8687 46.71 19.4443 30.3779 27.2002 20.7197 C22.1943 30.5186 22.7153 44.5693 29.7026 58.1182 CF0 0.8431 0.4745 0.2902 k105.5986 69.7861 m106.085 69.0576 106.3438 68.2979 106.3438 67.5283 c106.3438 61.0537 88.3887 55.8057 66.2373 55.8057 c49.2993 55.8057 34.812 58.8779 28.9336 63.2158 C32.5313 57.8213 48.7852 53.749 68.2944 53.749 c90.4438 53.749 108.4014 58.9971 108.4014 65.4736 c108.4014 66.9932 107.4067 68.4502 105.5986 69.7861 CF0.3686 0.502 0.0118 0.2314 k90.3877 79.1416 m93.062 77.5986 94.6123 75.7783 94.6123 73.8271 c94.6123 68.3115 82.2856 63.8369 67.0796 63.8369 c58.5786 63.8369 51.9067 65.0166 46.8564 67.2119 C51.7314 64.4092 59.4175 62.7568 69.2378 62.7568 c84.4448 62.7568 96.7725 67.2275 96.7725 72.7471 c96.7725 75.1787 94.373 77.4072 90.3877 79.1416 CF0.7529 0 0.5255 0.0353 k88.0283 70.2764 m87.0317 75.708 84.6138 79.8896 80.7734 82.001 c70.4321 87.6846 53.6948 76.2334 43.394 56.4131 c38.9624 47.8838 36.4419 39.1943 35.8359 31.6104 C34.8472 40.3799 37.752 52.1221 44.3887 63.333 c55.1758 81.5537 71.7349 91.4678 81.3721 85.4795 c85.752 82.7588 87.9492 77.2178 88.0283 70.2764 CF*u0.2235 0.3137 0.298 0.9451 k62.6909 28.0244 m59.1567 35.7744 L50.7871 35.7744 L47.2529 28.0244 L45.207 28.0244 L54.9409 49.2285 L64.7681 28.0244 l62.6909 28.0244 Lf1 D55.3438 44.1133 m55.0649 44.7021 55.0029 44.9502 54.9409 45.4775 c54.8789 44.9502 54.7861 44.6094 54.5688 44.1133 c51.562 37.4795 L58.3818 37.4795 l55.3438 44.1133 Lf*U*u0 D74.4399 42.0986 m70.9058 41.3857 69.1387 38.998 69.1387 34.999 c69.1387 28.0244 L67.2788 28.0244 L67.2788 43.7412 L69.1387 43.7412 L69.1387 42.2842 L69.1387 41.9746 69.1079 41.4473 69.0767 41.0137 c69.0459 40.6104 69.0146 40.4248 68.9219 40.0215 c69.2939 40.9209 69.6348 41.416 70.2549 42.0059 c71.4019 43.0908 72.9517 43.7725 74.564 43.9277 c74.4399 42.0986 Lf*U*u83.8325 27.8076 m79.3687 27.8076 75.7725 31.4346 75.7725 35.8672 c75.7725 40.3623 79.3379 43.9277 83.8325 43.9277 c85.9409 43.9277 87.8315 43.1836 89.3198 41.7881 c88.0488 40.4863 L86.7158 41.6338 85.4448 42.1299 83.8638 42.1299 c80.3916 42.1299 77.6328 39.3701 77.6328 35.8672 c77.6328 32.4268 80.3916 29.6367 83.8018 29.6367 c85.4136 29.6367 86.7158 30.1631 88.0488 31.3721 c89.3198 30.0703 l87.8008 28.5518 85.9717 27.8076 83.8325 27.8076 cf*U*u95.8604 42.0059 m95.8604 28.0244 L94.0005 28.0244 L94.0005 42.0059 L91.5205 42.0059 L91.5205 43.7412 L94.0005 43.7412 L94.0005 48.7012 L95.8604 48.7012 L95.8604 43.7412 L99.5806 43.7412 L99.5806 42.0059 l95.8604 42.0059 Lf*U*u102.959 45.3848 m102.959 48.7012 L104.8193 48.7012 L104.8193 45.3848 l102.959 45.3848 Lf102.959 28.0244 m102.959 43.7412 L104.8193 43.7412 L104.8193 28.0244 l102.959 28.0244 Lf*U*u116.7847 27.8076 m112.3208 27.8076 108.7246 31.4346 108.7246 35.8672 c108.7246 40.3623 112.29 43.9277 116.7847 43.9277 c118.8931 43.9277 120.7837 43.1836 122.272 41.7881 c121.001 40.4863 L119.668 41.6338 118.397 42.1299 116.8159 42.1299 c113.3438 42.1299 110.585 39.3701 110.585 35.8672 c110.585 32.4268 113.3438 29.6367 116.7539 29.6367 c118.3657 29.6367 119.668 30.1631 121.001 31.3721 c122.272 30.0703 l120.7529 28.5518 118.9238 27.8076 116.7847 27.8076 cf*U*u143.6309 27.5596 m134.0825 38.1309 L136.3145 38.1309 L137.7095 38.1309 138.5776 38.2549 139.3525 38.5645 c140.9028 39.1533 141.9878 40.8271 141.9878 42.5635 c141.9878 43.7412 141.5225 44.8262 140.7168 45.6328 c139.7246 46.624 138.6396 46.9658 136.4077 46.9658 c133.4009 46.9658 L133.4009 28.0244 L131.5405 28.0244 L131.5405 48.7012 L136.2217 48.7012 L138.2056 48.7012 139.2905 48.5469 140.2827 48.1123 c142.4526 47.2139 143.8477 45.0439 143.8477 42.5947 c143.8477 39.1846 141.3677 36.6738 137.9888 36.6738 c137.5234 36.6738 L137.9575 36.4258 138.0815 36.3633 138.8564 35.4951 c145.0259 28.7061 l143.6309 27.5596 Lf*U*u162.9746 35.0615 m150.8535 35.0615 L150.8535 36.7979 L161.0527 36.7979 L160.5254 40.0527 158.1694 42.1299 155.0073 42.1299 c151.5044 42.1299 148.8076 39.3701 148.8076 35.8369 c148.8076 32.3955 151.5664 29.6367 155.0073 29.6367 c156.8677 29.6367 158.3867 30.3496 159.7817 31.8994 c161.1455 30.7217 L159.5645 28.8301 157.4565 27.8076 155.0073 27.8076 c150.5435 27.8076 146.9473 31.4033 146.9473 35.8672 c146.9473 40.3623 150.5127 43.9277 154.9766 43.9277 c159.4097 43.9277 163.0366 40.3623 163.0366 36.0225 c163.0366 35.7432 163.0366 35.5264 162.9746 35.0615 cf*U*u180.1172 26.6914 m178.7222 24.0879 175.9941 22.4756 173.0493 22.4756 c170.5073 22.4756 168.3682 23.4678 166.7871 25.3896 c168.2129 26.5361 L169.4531 25.0488 171.0962 24.2734 172.9873 24.2734 c175.188 24.2734 177.2031 25.3896 178.2573 27.2188 c178.7842 28.1172 179.063 28.9854 179.2803 30.6904 c179.3423 31.124 179.3423 31.1865 179.4351 31.5273 c179.373 31.3418 179.311 31.2178 179.249 31.1553 c179.125 30.9385 178.8149 30.5049 178.5361 30.1943 c177.1104 28.6445 175.188 27.8076 173.0493 27.8076 c168.585 27.8076 165.02 31.4033 165.02 35.8672 c165.02 40.3936 168.5542 43.9277 173.0493 43.9277 c175.8701 43.9277 178.5054 42.4082 179.4351 40.2383 c179.2803 40.9209 179.249 41.2617 179.249 42.1914 c179.249 43.7412 L181.0781 43.7412 L181.0781 32.5195 l181.0781 29.2334 180.9233 28.1484 180.1172 26.6914 cf1 D173.0493 42.1299 m169.6079 42.1299 166.8799 39.3398 166.8799 35.8672 c166.8799 32.4268 169.6699 29.6367 173.0801 29.6367 c176.4902 29.6367 179.2183 32.3955 179.2183 35.8369 c179.2183 39.3701 176.521 42.1299 173.0493 42.1299 cf*U*u0 D185.3252 45.3848 m185.3252 48.7012 L187.1851 48.7012 L187.1851 45.3848 l185.3252 45.3848 Lf185.3252 28.0244 m185.3252 43.7412 L187.1851 43.7412 L187.1851 28.0244 l185.3252 28.0244 Lf*U*u198.5308 27.8076 m194.0664 27.8076 190.4707 31.4033 190.4707 35.8672 c190.4707 40.3311 194.0664 43.9277 198.5308 43.9277 c202.9639 43.9277 206.5596 40.3311 206.5596 35.8672 c206.5596 31.4346 202.9639 27.8076 198.5308 27.8076 cf1 D198.5308 42.1299 m195.0586 42.1299 192.3306 39.3701 192.3306 35.8672 c192.3306 32.3955 195.0898 29.6367 198.5308 29.6367 c201.9717 29.6367 204.6997 32.3955 204.6997 35.8672 c204.6997 39.3398 201.9717 42.1299 198.5308 42.1299 cf*U*u0 D221.0674 28.0244 m221.0674 36.3018 L221.0674 38.0996 220.8813 39.0918 220.3545 39.9902 c219.5483 41.3545 218.1226 42.1299 216.4482 42.1299 c214.9297 42.1299 213.5967 41.54 212.6973 40.4551 c211.8916 39.4941 211.5815 38.3164 211.5815 36.2393 c211.5815 28.0244 L209.7212 28.0244 L209.7212 43.7412 L211.5815 43.7412 L211.5815 43.3076 L211.5815 42.2539 211.5195 41.6338 211.3022 40.5791 c212.0464 42.625 214.1235 43.9277 216.5415 43.9277 c218.8975 43.9277 220.8506 42.873 221.9663 41.0137 c222.6797 39.7734 222.9272 38.627 222.9272 36.3018 c222.9272 28.0244 l221.0674 28.0244 Lf*U*u238.8921 27.7764 m235.1411 27.7764 232.5991 30.2256 232.4131 34.0381 c234.2734 34.0381 L234.4282 31.2793 236.1953 29.5742 238.8921 29.5742 c241.5273 29.5742 243.4805 31.4346 243.4805 33.9141 c243.4805 34.8447 243.1704 35.6504 242.5815 36.2705 c242.3022 36.5498 241.9302 36.8281 241.4961 37.0459 c240.7212 37.417 240.1943 37.6035 238.1792 38.0996 c236.5361 38.5029 235.8232 38.7813 235.0171 39.2461 c233.6221 40.083 232.8164 41.54 232.8164 43.2451 c232.8164 46.5313 235.3892 48.9492 238.8613 48.9492 c242.2402 48.9492 244.7515 46.6865 244.9375 43.5244 c243.0464 43.5244 L242.7051 45.8496 241.2173 47.1201 238.8921 47.1201 c236.4741 47.1201 234.6763 45.5391 234.6763 43.3691 c234.6763 41.6641 235.8232 40.7031 238.4893 39.9287 c239.8843 39.5254 L241.5273 39.0605 242.5195 38.6572 243.3872 38.0371 c244.6274 37.1699 245.3403 35.6504 245.3403 33.9141 c245.3403 30.4111 242.5815 27.7764 238.8921 27.7764 cf*U*u260.313 28.1484 m260.313 28.582 L260.313 29.6367 260.375 30.2568 260.561 31.2793 c259.8169 29.2646 257.771 27.9629 255.3218 27.9629 c252.9971 27.9629 251.0127 29.0166 249.9277 30.876 c249.2148 32.085 248.9668 33.2637 248.9668 35.5576 c248.9668 43.8652 L250.8267 43.8652 L250.8267 35.5576 L250.8267 33.79 251.0127 32.7988 251.54 31.8994 c252.3149 30.5664 253.772 29.7607 255.4458 29.7607 c256.9341 29.7607 258.2671 30.3496 259.1968 31.4346 c260.0029 32.3955 260.313 33.542 260.313 35.6504 c260.313 43.8652 L262.1729 43.8652 L262.1729 28.1484 l260.313 28.1484 Lf*U*u274.6968 27.8076 m271.9995 27.8076 269.4575 29.2959 268.2485 31.5273 c268.3105 31.2793 268.3418 31.0938 268.3726 30.9697 c268.4038 30.752 268.4346 30.2256 268.4346 29.667 c268.4346 22.8477 L266.5747 22.8477 L266.5747 43.7412 L268.4346 43.7412 L268.4346 42.1602 L268.4346 41.9434 268.4038 41.7266 268.4038 41.5098 c268.4038 40.9512 268.3726 40.7969 268.2485 40.2695 c269.1479 42.3467 271.9067 43.9277 274.6655 43.9277 c279.0679 43.9277 282.6636 40.3008 282.6636 35.8672 c282.6636 31.4658 279.0366 27.8076 274.6968 27.8076 cf1 D274.6348 42.1299 m271.1626 42.1299 268.4346 39.3398 268.4346 35.8057 c268.4346 32.3955 271.2246 29.6367 274.6035 29.6367 c278.0137 29.6367 280.8037 32.4268 280.8037 35.8672 c280.8037 39.3398 278.0757 42.1299 274.6348 42.1299 cf*U*u0 D300.9219 35.0615 m288.8013 35.0615 L288.8013 36.7979 L299 36.7979 L298.4736 40.0527 296.1172 42.1299 292.9551 42.1299 c289.4521 42.1299 286.7554 39.3701 286.7554 35.8369 c286.7554 32.3955 289.5146 29.6367 292.9551 29.6367 c294.8154 29.6367 296.334 30.3496 297.7295 31.8994 c299.0938 30.7217 L297.5127 28.8301 295.4043 27.8076 292.9551 27.8076 c288.4912 27.8076 284.8955 31.4033 284.8955 35.8672 c284.8955 40.3623 288.4604 43.9277 292.9248 43.9277 c297.3574 43.9277 300.9844 40.3623 300.9844 36.0225 c300.9844 35.7432 300.9844 35.5264 300.9219 35.0615 cf*U*u311.2139 42.0986 m307.6797 41.3857 305.9131 38.998 305.9131 34.999 c305.9131 28.0244 L304.0527 28.0244 L304.0527 43.7412 L305.9131 43.7412 L305.9131 42.2842 L305.9131 41.9746 305.8818 41.4473 305.8506 41.0137 c305.8203 40.6104 305.7891 40.4248 305.6963 40.0215 c306.0684 40.9209 306.4092 41.416 307.0293 42.0059 c308.1758 43.0908 309.7256 43.7725 311.3379 43.9277 c311.2139 42.0986 Lf*U*u320.6064 27.8076 m316.1426 27.8076 312.5469 31.4346 312.5469 35.8672 c312.5469 40.3623 316.1113 43.9277 320.6064 43.9277 c322.7148 43.9277 324.6055 43.1836 326.0938 41.7881 c324.8232 40.4863 L323.4902 41.6338 322.2188 42.1299 320.6377 42.1299 c317.166 42.1299 314.4072 39.3701 314.4072 35.8672 c314.4072 32.4268 317.166 29.6367 320.5762 29.6367 c322.1875 29.6367 323.4902 30.1631 324.8232 31.3721 c326.0938 30.0703 l324.5752 28.5518 322.7461 27.8076 320.6064 27.8076 cf*U*u335.5488 27.8076 m331.085 27.8076 327.4883 31.4033 327.4883 35.8672 c327.4883 40.3311 331.085 43.9277 335.5488 43.9277 c339.9814 43.9277 343.5781 40.3311 343.5781 35.8672 c343.5781 31.4346 339.9814 27.8076 335.5488 27.8076 cf1 D335.5488 42.1299 m332.0762 42.1299 329.3486 39.3701 329.3486 35.8672 c329.3486 32.3955 332.1074 29.6367 335.5488 29.6367 c338.9893 29.6367 341.7178 32.3955 341.7178 35.8672 c341.7178 39.3398 338.9893 42.1299 335.5488 42.1299 cf*U*u0 D367.7881 28.0244 m367.7881 36.9834 L367.7881 38.5332 367.5098 39.6494 366.9512 40.4551 c366.207 41.5098 364.9053 42.1299 363.5107 42.1299 c362.2393 42.1299 361.123 41.6338 360.2861 40.7031 c359.4492 39.7734 359.1396 38.6885 359.1396 36.6738 c359.1396 28.0244 L357.2793 28.0244 L357.2793 36.6738 L357.2793 38.4404 357.0313 39.5254 356.4424 40.3623 c355.6982 41.4785 354.4277 42.1299 353.002 42.1299 c351.6992 42.1299 350.5215 41.6025 349.7158 40.6416 c348.9092 39.7119 348.5996 38.5645 348.5996 36.6738 c348.5996 28.0244 L346.7393 28.0244 L346.7393 43.7412 L348.5996 43.7412 L348.5996 43.3076 L348.5996 42.3154 348.5068 41.6338 348.2891 40.7344 c349.1572 42.8115 350.8311 43.9277 353.1563 43.9277 c355.8848 43.9277 357.8994 42.4082 358.334 39.9902 c358.7988 42.3467 360.9063 43.9277 363.6035 43.9277 c365.3086 43.9277 366.8271 43.3691 367.9434 42.2539 c368.626 41.5713 369.0908 40.7656 369.3691 39.8975 c369.5869 39.1846 369.6484 38.4092 369.6484 36.9834 c369.6484 28.0244 l367.7881 28.0244 Lf*U*u382.0488 27.8076 m379.3516 27.8076 376.8096 29.2959 375.6006 31.5273 c375.6621 31.2793 375.6934 31.0938 375.7246 30.9697 c375.7559 30.752 375.7861 30.2256 375.7861 29.667 c375.7861 22.8477 L373.9268 22.8477 L373.9268 43.7412 L375.7861 43.7412 L375.7861 42.1602 L375.7861 41.9434 375.7559 41.7266 375.7559 41.5098 c375.7559 40.9512 375.7246 40.7969 375.6006 40.2695 c376.499 42.3467 379.2588 43.9277 382.0176 43.9277 c386.4199 43.9277 390.0156 40.3008 390.0156 35.8672 c390.0156 31.4658 386.3887 27.8076 382.0488 27.8076 cf1 D381.9863 42.1299 m378.5146 42.1299 375.7861 39.3398 375.7861 35.8057 c375.7861 32.3955 378.5762 29.6367 381.9551 29.6367 c385.3652 29.6367 388.1553 32.4268 388.1553 35.8672 c388.1553 39.3398 385.4277 42.1299 381.9863 42.1299 cf*U*u0 D404.3994 28.1484 m404.3994 28.582 L404.3994 29.6367 404.4609 30.2568 404.6475 31.2793 c403.9033 29.2646 401.8574 27.9629 399.4082 27.9629 c397.083 27.9629 395.0986 29.0166 394.0137 30.876 c393.3008 32.085 393.0527 33.2637 393.0527 35.5576 c393.0527 43.8652 L394.9131 43.8652 L394.9131 35.5576 L394.9131 33.79 395.0986 32.7988 395.626 31.8994 c396.4014 30.5664 397.8584 29.7607 399.5322 29.7607 c401.0205 29.7607 402.3535 30.3496 403.2832 31.4346 c404.0889 32.3955 404.3994 33.542 404.3994 35.6504 c404.3994 43.8652 L406.2588 43.8652 L406.2588 28.1484 l404.3994 28.1484 Lf*U*u413.792 42.0059 m413.792 28.0244 L411.9316 28.0244 L411.9316 42.0059 L409.4521 42.0059 L409.4521 43.7412 L411.9316 43.7412 L411.9316 48.7012 L413.792 48.7012 L413.792 43.7412 L417.5117 43.7412 L417.5117 42.0059 l413.792 42.0059 Lf*U*u420.8906 45.3848 m420.8906 48.7012 L422.751 48.7012 L422.751 45.3848 l420.8906 45.3848 Lf420.8906 28.0244 m420.8906 43.7412 L422.751 43.7412 L422.751 28.0244 l420.8906 28.0244 Lf*U*u438.7773 28.0244 m438.7773 36.3018 L438.7773 38.0996 438.5908 39.0918 438.0645 39.9902 c437.2578 41.3545 435.832 42.1299 434.1582 42.1299 c432.6396 42.1299 431.3066 41.54 430.4072 40.4551 c429.6016 39.4941 429.291 38.3164 429.291 36.2393 c429.291 28.0244 L427.4316 28.0244 L427.4316 43.7412 L429.291 43.7412 L429.291 43.3076 L429.291 42.2539 429.2295 41.6338 429.0117 40.5791 c429.7559 42.625 431.833 43.9277 434.251 43.9277 c436.6074 43.9277 438.5605 42.873 439.6758 41.0137 c440.3896 39.7734 440.6367 38.627 440.6367 36.3018 c440.6367 28.0244 l438.7773 28.0244 Lf*U*u458.7725 26.6914 m457.377 24.0879 454.6494 22.4756 451.7041 22.4756 c449.1621 22.4756 447.0234 23.4678 445.4424 25.3896 c446.8682 26.5361 L448.1084 25.0488 449.751 24.2734 451.6416 24.2734 c453.8428 24.2734 455.8584 25.3896 456.9121 27.2188 c457.4395 28.1172 457.7178 28.9854 457.9355 30.6904 c457.9971 31.124 457.9971 31.1865 458.0898 31.5273 c458.0283 31.3418 457.9658 31.2178 457.9043 31.1553 c457.7803 30.9385 457.4697 30.5049 457.1914 30.1943 c455.7646 28.6445 453.8428 27.8076 451.7041 27.8076 c447.2402 27.8076 443.6748 31.4033 443.6748 35.8672 c443.6748 40.3936 447.209 43.9277 451.7041 43.9277 c454.5254 43.9277 457.1602 42.4082 458.0898 40.2383 c457.9355 40.9209 457.9043 41.2617 457.9043 42.1914 c457.9043 43.7412 L459.7334 43.7412 L459.7334 32.5195 l459.7334 29.2334 459.5781 28.1484 458.7725 26.6914 cf1 D451.7041 42.1299 m448.2627 42.1299 445.5352 39.3398 445.5352 35.8672 c445.5352 32.4268 448.3252 29.6367 451.7354 29.6367 c455.1455 29.6367 457.873 32.3955 457.873 35.8369 c457.873 39.3701 455.1758 42.1299 451.7041 42.1299 cf*U*u0 D485.0908 29.2334 m483.541 28.3037 481.6807 27.7764 479.8213 27.7764 c473.9932 27.7764 469.1875 32.5508 469.1875 38.3789 c469.1875 44.2061 473.9307 48.9492 479.7275 48.9492 c480.751 48.9492 481.8047 48.7637 482.8594 48.4531 c484.0986 48.0811 484.6572 47.834 485.8965 46.9658 c484.8115 45.5088 L483.0449 46.6865 481.6191 47.1201 479.7588 47.1201 c474.9541 47.1201 471.0791 43.2451 471.0791 38.3789 c471.0791 33.542 474.9541 29.5742 479.7588 29.5742 c481.5566 29.5742 483.0137 30.0703 484.8115 31.2178 c485.8965 29.7295 l485.5557 29.5127 485.2773 29.3262 485.0908 29.2334 cf*U*u503.4424 35.0615 m491.3213 35.0615 L491.3213 36.7979 L501.5205 36.7979 L500.9932 40.0527 498.6377 42.1299 495.4756 42.1299 c491.9727 42.1299 489.2754 39.3701 489.2754 35.8369 c489.2754 32.3955 492.0342 29.6367 495.4756 29.6367 c497.3359 29.6367 498.8545 30.3496 500.25 31.8994 c501.6133 30.7217 L500.0322 28.8301 497.9248 27.8076 495.4756 27.8076 c491.0117 27.8076 487.416 31.4033 487.416 35.8672 c487.416 40.3623 490.9805 43.9277 495.4443 43.9277 c499.8779 43.9277 503.5049 40.3623 503.5049 36.0225 c503.5049 35.7432 503.5049 35.5264 503.4424 35.0615 cf*U*u517.9189 28.0244 m517.9189 36.3018 L517.9189 38.0996 517.7334 39.0918 517.2061 39.9902 c516.4004 41.3545 514.9746 42.1299 513.2998 42.1299 c511.7813 42.1299 510.4482 41.54 509.5488 40.4551 c508.7432 39.4941 508.4336 38.3164 508.4336 36.2393 c508.4336 28.0244 L506.5732 28.0244 L506.5732 43.7412 L508.4336 43.7412 L508.4336 43.3076 L508.4336 42.2539 508.3711 41.6338 508.1543 40.5791 c508.8984 42.625 510.9756 43.9277 513.3936 43.9277 c515.749 43.9277 517.7021 42.873 518.8184 41.0137 c519.5313 39.7734 519.7793 38.627 519.7793 36.3018 c519.7793 28.0244 l517.9189 28.0244 Lf*U*u526.4131 42.0059 m526.4131 28.0244 L524.5527 28.0244 L524.5527 42.0059 L522.0732 42.0059 L522.0732 43.7412 L524.5527 43.7412 L524.5527 48.7012 L526.4131 48.7012 L526.4131 43.7412 L530.1328 43.7412 L530.1328 42.0059 l526.4131 42.0059 Lf*U*u546.9033 35.0615 m534.7832 35.0615 L534.7832 36.7979 L544.9814 36.7979 L544.4551 40.0527 542.0986 42.1299 538.9365 42.1299 c535.4336 42.1299 532.7363 39.3701 532.7363 35.8369 c532.7363 32.3955 535.4961 29.6367 538.9365 29.6367 c540.7969 29.6367 542.3154 30.3496 543.7109 31.8994 c545.0752 30.7217 L543.4941 28.8301 541.3857 27.8076 538.9365 27.8076 c534.4727 27.8076 530.877 31.4033 530.877 35.8672 c530.877 40.3623 534.4414 43.9277 538.9053 43.9277 c543.3389 43.9277 546.9658 40.3623 546.9658 36.0225 c546.9658 35.7432 546.9658 35.5264 546.9033 35.0615 cf*U*u557.5049 42.0986 m553.9717 41.3857 552.2041 38.998 552.2041 34.999 c552.2041 28.0244 L550.3447 28.0244 L550.3447 43.7412 L552.2041 43.7412 L552.2041 42.2842 L552.2041 41.9746 552.1738 41.4473 552.1426 41.0137 c552.1113 40.6104 552.0801 40.4248 551.9873 40.0215 c552.3594 40.9209 552.7002 41.416 553.3203 42.0059 c554.4678 43.0908 556.0176 43.7725 557.6289 43.9277 c557.5049 42.0986 Lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_pattern_AI5 /terminate get execAdobe_blend_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF